{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/ihdiym/Desktop/MNW/complaints_extraction/serviceai-aggregation-2/frontend/src/components/MetricsDashboard.tsx"],"sourcesContent":["'use client';\n\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n\ninterface DashboardMetrics {\n  total_requests_today: number;\n  avg_assign_time_today: number;\n  avg_resolution_time_today: number;\n  requests_by_status: Record<string, number>;\n  top_technicians: Array<{ name: string; count: number }>;\n  hourly_distribution: Record<string, number>;\n}\n\ninterface MetricsDashboardProps {\n  user: any;\n}\n\nconst MetricsDashboard: React.FC<MetricsDashboardProps> = ({ user }) => {\n  const [metrics, setMetrics] = useState<DashboardMetrics | null>(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n\n  const getAuthHeader = async () => {\n    const token = await user.getIdToken();\n    return {\n      headers: {\n        'Authorization': `Bearer ${token}`,\n        'Content-Type': 'application/json'\n      }\n    };\n  };\n\n  const fetchMetrics = async () => {\n    try {\n      setLoading(true);\n      const config = await getAuthHeader();\n      const response = await axios.get('http://localhost:4000/metrics/dashboard', config);\n      setMetrics(response.data);\n      setError(null);\n    } catch (err: any) {\n      console.error('Failed to fetch metrics:', err);\n      setError(err.response?.data?.error || 'Failed to load metrics');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    if (user) {\n      fetchMetrics();\n      // Refresh metrics every 5 minutes\n      const interval = setInterval(fetchMetrics, 5 * 60 * 1000);\n      return () => clearInterval(interval);\n    }\n  }, [user]);\n\n  const formatTime = (seconds: number): string => {\n    if (seconds < 60) return `${Math.round(seconds)}s`;\n    if (seconds < 3600) return `${Math.round(seconds / 60)}m`;\n    return `${Math.round(seconds / 3600)}h ${Math.round((seconds % 3600) / 60)}m`;\n  };\n\n  const formatHour = (hour: string): string => {\n    const hourNum = parseInt(hour);\n    return `${hourNum}:00`;\n  };\n\n  if (loading) {\n    return (\n      <div className=\"flex justify-center items-center h-64\">\n        <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-blue-600\"></div>\n      </div>\n    );\n  }\n\n  if (error) {\n    return (\n      <div className=\"bg-red-50 border border-red-200 rounded-lg p-4\">\n        <p className=\"text-red-800\">Error: {error}</p>\n        <button \n          onClick={fetchMetrics}\n          className=\"mt-2 px-4 py-2 bg-red-600 text-white rounded hover:bg-red-700\"\n        >\n          Retry\n        </button>\n      </div>\n    );\n  }\n\n  if (!metrics) {\n    return <div>No metrics available</div>;\n  }\n\n  return (\n    <div className=\"space-y-6\">\n      <div className=\"flex justify-between items-center\">\n        <h2 className=\"text-2xl font-bold text-gray-900\">Service Metrics Dashboard</h2>\n        <button \n          onClick={fetchMetrics}\n          className=\"px-4 py-2 bg-blue-600 text-white rounded hover:bg-blue-700\"\n        >\n          Refresh\n        </button>\n      </div>\n\n      {/* Key Metrics Cards */}\n      <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6\">\n        <div className=\"bg-white p-6 rounded-lg shadow-md\">\n          <h3 className=\"text-lg font-semibold text-gray-700 mb-2\">Total Requests Today</h3>\n          <p className=\"text-3xl font-bold text-blue-600\">{metrics.total_requests_today}</p>\n        </div>\n        \n        <div className=\"bg-white p-6 rounded-lg shadow-md\">\n          <h3 className=\"text-lg font-semibold text-gray-700 mb-2\">Avg Assignment Time</h3>\n          <p className=\"text-3xl font-bold text-green-600\">\n            {formatTime(metrics.avg_assign_time_today)}\n          </p>\n        </div>\n        \n        <div className=\"bg-white p-6 rounded-lg shadow-md\">\n          <h3 className=\"text-lg font-semibold text-gray-700 mb-2\">Avg Resolution Time</h3>\n          <p className=\"text-3xl font-bold text-purple-600\">\n            {formatTime(metrics.avg_resolution_time_today)}\n          </p>\n        </div>\n      </div>\n\n      {/* Status Distribution */}\n      <div className=\"bg-white p-6 rounded-lg shadow-md\">\n        <h3 className=\"text-xl font-semibold text-gray-900 mb-4\">Requests by Status</h3>\n        <div className=\"grid grid-cols-2 md:grid-cols-4 gap-4\">\n          {Object.entries(metrics.requests_by_status).map(([status, count]) => (\n            <div key={status} className=\"text-center\">\n              <div className={`text-2xl font-bold ${\n                status === 'pending' ? 'text-yellow-600' :\n                status === 'active' ? 'text-blue-600' :\n                status === 'closed' ? 'text-green-600' : 'text-gray-600'\n              }`}>\n                {count}\n              </div>\n              <div className=\"text-sm text-gray-600 capitalize\">{status}</div>\n            </div>\n          ))}\n        </div>\n      </div>\n\n      {/* Top Technicians */}\n      <div className=\"bg-white p-6 rounded-lg shadow-md\">\n        <h3 className=\"text-xl font-semibold text-gray-900 mb-4\">Top Performing Technicians</h3>\n        <div className=\"space-y-3\">\n          {metrics.top_technicians.map((tech, index) => (\n            <div key={tech.name} className=\"flex justify-between items-center p-3 bg-gray-50 rounded\">\n              <div className=\"flex items-center\">\n                <span className=\"text-lg font-semibold text-gray-600 mr-3\">#{index + 1}</span>\n                <span className=\"font-medium\">{tech.name}</span>\n              </div>\n              <span className=\"text-lg font-bold text-blue-600\">{tech.count} requests</span>\n            </div>\n          ))}\n        </div>\n      </div>\n\n      {/* Hourly Distribution */}\n      <div className=\"bg-white p-6 rounded-lg shadow-md\">\n        <h3 className=\"text-xl font-semibold text-gray-900 mb-4\">Hourly Request Distribution</h3>\n        <div className=\"grid grid-cols-6 md:grid-cols-12 gap-2\">\n          {Array.from({ length: 24 }, (_, i) => {\n            const hour = i.toString();\n            const count = metrics.hourly_distribution[hour] || 0;\n            return (\n              <div key={hour} className=\"text-center\">\n                <div className=\"text-xs text-gray-600 mb-1\">{formatHour(hour)}</div>\n                <div className=\"bg-blue-100 rounded p-1\">\n                  <div className=\"text-sm font-semibold text-blue-800\">{count}</div>\n                </div>\n              </div>\n            );\n          })}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default MetricsDashboard; "],"names":[],"mappings":";;;;AAEA;AACA;;;AAHA;;;AAkBA,MAAM,mBAAoD,CAAC,EAAE,IAAI,EAAE;;IACjE,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAA2B;IAChE,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IACvC,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAiB;IAElD,MAAM,gBAAgB;QACpB,MAAM,QAAQ,MAAM,KAAK,UAAU;QACnC,OAAO;YACL,SAAS;gBACP,iBAAiB,CAAC,OAAO,EAAE,OAAO;gBAClC,gBAAgB;YAClB;QACF;IACF;IAEA,MAAM,eAAe;QACnB,IAAI;YACF,WAAW;YACX,MAAM,SAAS,MAAM;YACrB,MAAM,WAAW,MAAM,wIAAA,CAAA,UAAK,CAAC,GAAG,CAAC,2CAA2C;YAC5E,WAAW,SAAS,IAAI;YACxB,SAAS;QACX,EAAE,OAAO,KAAU;YACjB,QAAQ,KAAK,CAAC,4BAA4B;YAC1C,SAAS,IAAI,QAAQ,EAAE,MAAM,SAAS;QACxC,SAAU;YACR,WAAW;QACb;IACF;IAEA,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;sCAAE;YACR,IAAI,MAAM;gBACR;gBACA,kCAAkC;gBAClC,MAAM,WAAW,YAAY,cAAc,IAAI,KAAK;gBACpD;kDAAO,IAAM,cAAc;;YAC7B;QACF;qCAAG;QAAC;KAAK;IAET,MAAM,aAAa,CAAC;QAClB,IAAI,UAAU,IAAI,OAAO,GAAG,KAAK,KAAK,CAAC,SAAS,CAAC,CAAC;QAClD,IAAI,UAAU,MAAM,OAAO,GAAG,KAAK,KAAK,CAAC,UAAU,IAAI,CAAC,CAAC;QACzD,OAAO,GAAG,KAAK,KAAK,CAAC,UAAU,MAAM,EAAE,EAAE,KAAK,KAAK,CAAC,AAAC,UAAU,OAAQ,IAAI,CAAC,CAAC;IAC/E;IAEA,MAAM,aAAa,CAAC;QAClB,MAAM,UAAU,SAAS;QACzB,OAAO,GAAG,QAAQ,GAAG,CAAC;IACxB;IAEA,IAAI,SAAS;QACX,qBACE,6LAAC;YAAI,WAAU;sBACb,cAAA,6LAAC;gBAAI,WAAU;;;;;;;;;;;IAGrB;IAEA,IAAI,OAAO;QACT,qBACE,6LAAC;YAAI,WAAU;;8BACb,6LAAC;oBAAE,WAAU;;wBAAe;wBAAQ;;;;;;;8BACpC,6LAAC;oBACC,SAAS;oBACT,WAAU;8BACX;;;;;;;;;;;;IAKP;IAEA,IAAI,CAAC,SAAS;QACZ,qBAAO,6LAAC;sBAAI;;;;;;IACd;IAEA,qBACE,6LAAC;QAAI,WAAU;;0BACb,6LAAC;gBAAI,WAAU;;kCACb,6LAAC;wBAAG,WAAU;kCAAmC;;;;;;kCACjD,6LAAC;wBACC,SAAS;wBACT,WAAU;kCACX;;;;;;;;;;;;0BAMH,6LAAC;gBAAI,WAAU;;kCACb,6LAAC;wBAAI,WAAU;;0CACb,6LAAC;gCAAG,WAAU;0CAA2C;;;;;;0CACzD,6LAAC;gCAAE,WAAU;0CAAoC,QAAQ,oBAAoB;;;;;;;;;;;;kCAG/E,6LAAC;wBAAI,WAAU;;0CACb,6LAAC;gCAAG,WAAU;0CAA2C;;;;;;0CACzD,6LAAC;gCAAE,WAAU;0CACV,WAAW,QAAQ,qBAAqB;;;;;;;;;;;;kCAI7C,6LAAC;wBAAI,WAAU;;0CACb,6LAAC;gCAAG,WAAU;0CAA2C;;;;;;0CACzD,6LAAC;gCAAE,WAAU;0CACV,WAAW,QAAQ,yBAAyB;;;;;;;;;;;;;;;;;;0BAMnD,6LAAC;gBAAI,WAAU;;kCACb,6LAAC;wBAAG,WAAU;kCAA2C;;;;;;kCACzD,6LAAC;wBAAI,WAAU;kCACZ,OAAO,OAAO,CAAC,QAAQ,kBAAkB,EAAE,GAAG,CAAC,CAAC,CAAC,QAAQ,MAAM,iBAC9D,6LAAC;gCAAiB,WAAU;;kDAC1B,6LAAC;wCAAI,WAAW,CAAC,mBAAmB,EAClC,WAAW,YAAY,oBACvB,WAAW,WAAW,kBACtB,WAAW,WAAW,mBAAmB,iBACzC;kDACC;;;;;;kDAEH,6LAAC;wCAAI,WAAU;kDAAoC;;;;;;;+BAR3C;;;;;;;;;;;;;;;;0BAehB,6LAAC;gBAAI,WAAU;;kCACb,6LAAC;wBAAG,WAAU;kCAA2C;;;;;;kCACzD,6LAAC;wBAAI,WAAU;kCACZ,QAAQ,eAAe,CAAC,GAAG,CAAC,CAAC,MAAM,sBAClC,6LAAC;gCAAoB,WAAU;;kDAC7B,6LAAC;wCAAI,WAAU;;0DACb,6LAAC;gDAAK,WAAU;;oDAA2C;oDAAE,QAAQ;;;;;;;0DACrE,6LAAC;gDAAK,WAAU;0DAAe,KAAK,IAAI;;;;;;;;;;;;kDAE1C,6LAAC;wCAAK,WAAU;;4CAAmC,KAAK,KAAK;4CAAC;;;;;;;;+BALtD,KAAK,IAAI;;;;;;;;;;;;;;;;0BAYzB,6LAAC;gBAAI,WAAU;;kCACb,6LAAC;wBAAG,WAAU;kCAA2C;;;;;;kCACzD,6LAAC;wBAAI,WAAU;kCACZ,MAAM,IAAI,CAAC;4BAAE,QAAQ;wBAAG,GAAG,CAAC,GAAG;4BAC9B,MAAM,OAAO,EAAE,QAAQ;4BACvB,MAAM,QAAQ,QAAQ,mBAAmB,CAAC,KAAK,IAAI;4BACnD,qBACE,6LAAC;gCAAe,WAAU;;kDACxB,6LAAC;wCAAI,WAAU;kDAA8B,WAAW;;;;;;kDACxD,6LAAC;wCAAI,WAAU;kDACb,cAAA,6LAAC;4CAAI,WAAU;sDAAuC;;;;;;;;;;;;+BAHhD;;;;;wBAOd;;;;;;;;;;;;;;;;;;AAKV;GArKM;KAAA;uCAuKS","debugId":null}},
    {"offset": {"line": 442, "column": 0}, "map": {"version":3,"sources":["file:///Users/ihdiym/Desktop/MNW/complaints_extraction/serviceai-aggregation-2/frontend/src/app/dashboard/page.tsx"],"sourcesContent":["\"use client\";\nimport { useEffect, useState } from 'react';\nimport { onAuthStateChanged } from 'firebase/auth';\nimport { auth } from '@/lib/firebase';\nimport { useRouter } from 'next/navigation';\nimport axios from \"axios\";\nimport MetricsDashboard from '@/components/MetricsDashboard';\nimport React, { useRef } from 'react';\nimport ReactMarkdown from 'react-markdown';\nimport dayjs from 'dayjs';\nimport { FaCar, FaBatteryFull, FaCogs, FaCalendarAlt, FaTachometerAlt, FaCheckCircle, FaExclamationCircle, FaTools, FaShieldAlt, FaSpinner } from 'react-icons/fa';\n\n// --- Technician Components ---\nconst Timer = ({ startTime }: { startTime: string }) => {\n  const [elapsedTime, setElapsedTime] = useState('');\n  useEffect(() => {\n    const updateTimer = () => {\n      const start = new Date(startTime).getTime();\n      const now = new Date().getTime();\n      const difference = now - start;\n      const hours = Math.floor(difference / (1000 * 60 * 60));\n      const minutes = Math.floor((difference % (1000 * 60 * 60)) / (1000 * 60));\n      const seconds = Math.floor((difference % (1000 * 60)) / 1000);\n      setElapsedTime(`${hours.toString().padStart(2, '0')}:${minutes.toString().padStart(2, '0')}:${seconds.toString().padStart(2, '0')}`);\n    };\n    updateTimer();\n    const intervalId = setInterval(updateTimer, 1000);\n    return () => clearInterval(intervalId);\n  }, [startTime]);\n  return <span className=\"font-mono text-lg text-gray-800\">{elapsedTime}</span>;\n};\n\n// Helper to fetch warranty info for a user's vehicle model\nconst useWarrantyInfo = (authorId: string, vehicleModel: string) => {\n  const [warranty, setWarranty] = useState<Record<string, any> | null>(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState<string | null>(null);\n\n  useEffect(() => {\n    if (!authorId || !vehicleModel) return;\n    setLoading(true);\n    setError(null);\n    setWarranty(null);\n    const fetchWarranty = async () => {\n      try {\n        const user = auth.currentUser;\n        if (!user) return;\n        const idToken = await user.getIdToken();\n        const res = await axios.get(`http://localhost:4000/profile/vehicles/${authorId}`, {\n          headers: { Authorization: `Bearer ${idToken}` }\n        });\n        const vehicles = res.data.vehicles || [];\n        const vehicle = vehicles.find((v: any) => (v.vehicleModel || v.model) === vehicleModel);\n        setWarranty(vehicle?.warranty || null);\n      } catch (err) {\n        setError('Could not fetch warranty info.');\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchWarranty();\n  }, [authorId, vehicleModel]);\n\n  return { warranty, loading, error };\n};\n\n// Warranty display component\nconst WarrantyInfo = ({ authorId, vehicleModel }: { authorId: string, vehicleModel: string }): React.ReactElement | null => {\n  const { warranty, loading, error } = useWarrantyInfo(authorId, vehicleModel);\n  if (!authorId || !vehicleModel) return null;\n  if (loading) return <div className=\"mt-2 text-blue-600 flex items-center gap-2\"><FaSpinner className=\"animate-spin\" /> Loading warranty info...</div>;\n  if (error) return <div className=\"mt-2 text-red-600\">{error}</div>;\n  if (!warranty) return <div className=\"mt-2 text-gray-500\">No warranty info found for this vehicle.</div>;\n  return (\n    <div className=\"mt-2 bg-gray-50 border border-gray-200 rounded p-3\">\n      <h4 className=\"font-semibold mb-2 text-blue-700 flex items-center gap-2\"><FaShieldAlt /> Warranty Status</h4>\n      <div className=\"flex flex-wrap gap-4 justify-center\">\n        {Object.entries(warranty as Record<string, any>).map(([component, details]) => (\n          <div key={component} className=\"bg-white rounded p-3 border border-gray-100 shadow-sm mb-2 min-w-[220px] max-w-xs flex-1\">\n            <div className=\"flex items-center gap-2 mb-2\">\n              {component.toLowerCase().includes('battery') && <FaBatteryFull className=\"text-yellow-500\" />}\n              {component.toLowerCase().includes('engine') && <FaCogs className=\"text-gray-700\" />}\n              {component.toLowerCase().includes('motor') && <FaTools className=\"text-purple-600\" />}\n              {component.toLowerCase().includes('transmission') && <FaCogs className=\"text-blue-600\" />}\n              {component.toLowerCase().includes('rust') && <FaExclamationCircle className=\"text-orange-600\" />}\n              <span className=\"font-medium text-gray-800 text-base\">{component}</span>\n            </div>\n            <ul className=\"ml-2 text-sm space-y-1\">\n              {Object.entries(details as Record<string, any>).map(([k, v]) => (\n                <li key={k} className={k === 'Status' ? (v === 'Active' ? 'text-green-600 font-semibold' : 'text-red-600 font-semibold') : ''}>\n                  <b>{k}:</b> {v}\n                  {k === 'Status' && (v === 'Active' ? <FaCheckCircle className=\"inline ml-1 text-green-500\" /> : <FaExclamationCircle className=\"inline ml-1 text-red-500\" />)}\n                </li>\n              ))}\n            </ul>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nconst TechnicianDashboard = ({ profile, requests, onAccept, onClose, fetchTechnicianData }: any) => {\n  const [manualMeta, setManualMeta] = useState<any>(null);\n  const [uploading, setUploading] = useState(false);\n  const [uploadError, setUploadError] = useState<string | null>(null);\n  const [searchModal, setSearchModal] = useState<{ open: boolean, requestId: string | null }>({ open: false, requestId: null });\n  const [searchQuery, setSearchQuery] = useState('');\n  const [searchResult, setSearchResult] = useState<any>(null);\n  const [searchLoading, setSearchLoading] = useState(false);\n  const [searchError, setSearchError] = useState<string | null>(null);\n  const fileInputRef = useRef<HTMLInputElement>(null);\n  const [showTechForm, setShowTechForm] = useState(false);\n  const [techRequestDetails, setTechRequestDetails] = useState(\"\");\n  const [techSubmitting, setTechSubmitting] = useState(false);\n  const [techError, setTechError] = useState(\"\");\n  const [userSearch, setUserSearch] = useState('');\n  const [userSearchResults, setUserSearchResults] = useState<any[]>([]);\n  const [userSearchLoading, setUserSearchLoading] = useState(false);\n  const [selectedUser, setSelectedUser] = useState<any>(null);\n  const [userVehicles, setUserVehicles] = useState<any[]>([]);\n  const [vehicleLoading, setVehicleLoading] = useState(false);\n  const [selectedVehicleId, setSelectedVehicleId] = useState('');\n\n  // Search users by name\n  useEffect(() => {\n    if (userSearch.length < 2) {\n      setUserSearchResults([]);\n      return;\n    }\n    setUserSearchLoading(true);\n    const fetchUsers = async () => {\n      try {\n        const user = auth.currentUser;\n        if (!user) return;\n        const idToken = await user.getIdToken();\n        const res = await axios.get(`http://localhost:4000/users/search?q=${encodeURIComponent(userSearch)}`, {\n          headers: { Authorization: `Bearer ${idToken}` }\n        });\n        setUserSearchResults(res.data.users || []);\n      } catch (err) {\n        setUserSearchResults([]);\n      } finally {\n        setUserSearchLoading(false);\n      }\n    };\n    const timeout = setTimeout(fetchUsers, 300);\n    return () => clearTimeout(timeout);\n  }, [userSearch]);\n\n  // Fetch vehicles for selected user\n  useEffect(() => {\n    if (!selectedUser) {\n      setUserVehicles([]);\n      setSelectedVehicleId('');\n      return;\n    }\n    setVehicleLoading(true);\n    const fetchVehicles = async () => {\n      try {\n        const user = auth.currentUser;\n        if (!user) return;\n        const idToken = await user.getIdToken();\n        const res = await axios.get(`http://localhost:4000/profile/vehicles/${selectedUser.id}`, {\n          headers: { Authorization: `Bearer ${idToken}` }\n        });\n        setUserVehicles(res.data.vehicles || []);\n      } catch (err) {\n        setUserVehicles([]);\n      } finally {\n        setVehicleLoading(false);\n      }\n    };\n    fetchVehicles();\n  }, [selectedUser]);\n\n  // Helper to get auth header\n  const getAuthHeader = async () => {\n    const user = auth.currentUser;\n    if (!user) return { headers: {} };\n    const idToken = await user.getIdToken();\n    return { headers: { Authorization: `Bearer ${idToken}` } };\n  };\n\n  // Manual upload handler\n  const handleManualUpload = async (e: React.ChangeEvent<HTMLInputElement>) => {\n    setUploadError(null);\n    if (!e.target.files || e.target.files.length === 0) return;\n    const file = e.target.files[0];\n    setUploading(true);\n    try {\n      const config = await getAuthHeader();\n      const formData = new FormData();\n      formData.append('pdf', file);\n      const res = await axios.post('http://localhost:4000/manual/upload', formData, {\n        ...config,\n        headers: { ...config.headers, 'Content-Type': 'multipart/form-data' },\n      });\n      setManualMeta(res.data.metadata);\n    } catch (err: any) {\n      setUploadError(err?.response?.data?.error || 'Failed to upload manual.');\n    } finally {\n      setUploading(false);\n      if (fileInputRef.current) fileInputRef.current.value = '';\n    }\n  };\n\n  // Open search modal for a request\n  const openSearchModal = (requestId: string) => {\n    setSearchModal({ open: true, requestId });\n    setSearchQuery('');\n    setSearchResult(null);\n    setSearchError(null);\n  };\n\n  // Close search modal\n  const closeSearchModal = () => {\n    setSearchModal({ open: false, requestId: null });\n    setSearchQuery('');\n    setSearchResult(null);\n    setSearchError(null);\n  };\n\n  // Handle search submit\n  const handleSearch = async (e: React.FormEvent) => {\n    e.preventDefault();\n    setSearchLoading(true);\n    setSearchResult(null);\n    setSearchError(null);\n    try {\n      const config = await getAuthHeader();\n      const res = await axios.post('http://localhost:4000/manual/search', { query: searchQuery }, config);\n      setSearchResult(res.data);\n    } catch (err: any) {\n      setSearchError(err?.response?.data?.error || 'Failed to search manual.');\n    } finally {\n      setSearchLoading(false);\n    }\n  };\n\n  // Handler for technician direct request (with user/vehicle selection)\n  const handleSubmitTechnicianRequest = async (e: React.FormEvent) => {\n    e.preventDefault();\n    setTechError(\"\");\n    let authorIdToSend = 'technician';\n    if (selectedUser && selectedUser.id) {\n      authorIdToSend = selectedUser.id;\n    }\n    if (!selectedUser) {\n      setTechError(\"Please select a user.\");\n      return;\n    }\n    if (!selectedVehicleId) {\n      setTechError(\"Please select a vehicle.\");\n      return;\n    }\n    if (!techRequestDetails.trim()) {\n      setTechError(\"Please enter service request details.\");\n      return;\n    }\n    setTechSubmitting(true);\n    try {\n      const user = auth.currentUser;\n      if (!user) throw new Error(\"Not authenticated\");\n      const idToken = await user.getIdToken();\n      await axios.post(\"http://localhost:4000/requests\", {\n        requestDetails: techRequestDetails,\n        vehicleId: selectedVehicleId,\n        authorId: authorIdToSend\n      }, {\n        headers: { Authorization: `Bearer ${idToken}` }\n      });\n      setShowTechForm(false);\n      setTechRequestDetails(\"\");\n      setTechError(\"\");\n      setUserSearch('');\n      setUserSearchResults([]);\n      setSelectedUser(null);\n      setUserVehicles([]);\n      setSelectedVehicleId('');\n      // Refresh requests\n      await fetchTechnicianData();\n    } catch (error: any) {\n      setTechError(error?.response?.data?.error || \"Failed to submit request.\");\n    } finally {\n      setTechSubmitting(false);\n    }\n  };\n\n  // In TechnicianDashboard, add handleStartRequest for setting acceptedAt\n  const handleStartRequest = async (requestId: string) => {\n    try {\n      const config = await getAuthHeader();\n      await axios.put(`http://localhost:4000/requests/${requestId}/start`, {}, config);\n      await fetchTechnicianData();\n    } catch (error) {\n      console.error(\"Failed to start request:\", error);\n    }\n  };\n\n  return (\n    <div className=\"max-w-7xl mx-auto space-y-8\">\n      {/* Manual Upload Section */}\n      <div className=\"bg-white shadow-lg rounded-xl p-6 flex flex-col sm:flex-row sm:items-center gap-4\">\n        <div>\n          <input\n            type=\"file\"\n            accept=\"application/pdf\"\n            ref={fileInputRef}\n            style={{ display: 'none' }}\n            onChange={handleManualUpload}\n          />\n          <button\n            className=\"bg-blue-600 text-white font-bold py-2 px-4 rounded-lg hover:bg-blue-700\"\n            onClick={() => fileInputRef.current?.click()}\n            disabled={uploading}\n          >\n            {uploading ? 'Uploading...' : 'Upload PDF Manual'}\n          </button>\n        </div>\n        {manualMeta && (\n          <div className=\"text-sm text-gray-700\">\n            <div><b>Manual:</b> {manualMeta.currentFileName}</div>\n            <div><b>Pages:</b> {manualMeta.pageCount}</div>\n            <div><b>Total Chunks:</b> {manualMeta.totalChunks}</div>\n          </div>\n        )}\n        {uploadError && <div className=\"text-red-600 text-sm\">{uploadError}</div>}\n      </div>\n      {/* Technician Add Service Request Button */}\n      <div className=\"flex justify-end mb-4\">\n        <button\n          className=\"bg-blue-600 text-white font-bold py-2 px-4 rounded-lg hover:bg-blue-700 transition-colors\"\n          onClick={() => setShowTechForm(true)}\n        >\n          + Add Service Request (Direct)\n        </button>\n      </div>\n      {/* Technician Add Service Request Modal */}\n      {showTechForm && (\n        <div className=\"fixed inset-0 flex items-center justify-center z-50 bg-black bg-opacity-30\">\n          <div className=\"bg-white rounded-lg shadow-xl p-6 w-full max-w-md relative\">\n            <button\n              className=\"absolute top-2 right-2 text-gray-400 hover:text-gray-700 text-xl font-bold\"\n              onClick={() => {\n                setShowTechForm(false); setTechError(\"\"); setUserSearch(''); setUserSearchResults([]); setSelectedUser(null); setUserVehicles([]); setSelectedVehicleId('');\n              }}\n              aria-label=\"Close\"\n            >\n              ×\n            </button>\n            <h2 className=\"text-xl font-bold mb-2\">New Service Request (Technician)</h2>\n            <form onSubmit={handleSubmitTechnicianRequest} className=\"space-y-4\">\n              {/* User Search */}\n              <div>\n                <label className=\"font-medium\">Search User by Name</label>\n                <input\n                  type=\"text\"\n                  className=\"w-full border border-gray-300 rounded-lg p-2 mt-1\"\n                  placeholder=\"Enter user name...\"\n                  value={userSearch}\n                  onChange={e => { setUserSearch(e.target.value); setSelectedUser(null); setUserVehicles([]); setSelectedVehicleId(''); }}\n                  disabled={techSubmitting}\n                  autoFocus\n                />\n                {userSearchLoading && <div className=\"text-xs text-blue-600 mt-1\">Searching...</div>}\n                {userSearch.length >= 2 && userSearchResults.length > 0 && !selectedUser && (\n                  <ul className=\"border rounded bg-white mt-1 max-h-40 overflow-y-auto divide-y\">\n                    {userSearchResults.map(user => (\n                      <li key={user.id} className=\"p-2 hover:bg-blue-100 cursor-pointer\" onClick={() => setSelectedUser(user)}>\n                        {user.firstName} {user.lastName} <span className=\"text-xs text-gray-500\">({user.email})</span>\n                      </li>\n                    ))}\n                  </ul>\n                )}\n                {userSearch.length >= 2 && !userSearchLoading && userSearchResults.length === 0 && !selectedUser && (\n                  <div className=\"text-xs text-gray-500 mt-1\">No users found.</div>\n                )}\n                {selectedUser && (\n                  <div className=\"mt-2 text-green-700 text-sm\">Selected: {selectedUser.firstName} {selectedUser.lastName} ({selectedUser.email}) <button type=\"button\" className=\"ml-2 text-blue-600 underline\" onClick={() => { setSelectedUser(null); setUserVehicles([]); setSelectedVehicleId(''); }}>Change</button></div>\n                )}\n              </div>\n              {/* Vehicle Selection */}\n              {selectedUser && (\n                <div>\n                  <label className=\"font-medium\">Select Vehicle</label>\n                  {vehicleLoading ? (\n                    <div className=\"text-xs text-blue-600 mt-1\">Loading vehicles...</div>\n                  ) : userVehicles.length === 0 ? (\n                    <div className=\"text-xs text-gray-500 mt-1\">No vehicles found for this user.</div>\n                  ) : (\n                    <select\n                      className=\"w-full border border-gray-300 rounded-lg p-2 mt-1\"\n                      value={selectedVehicleId}\n                      onChange={e => setSelectedVehicleId(e.target.value.trim())}\n                      required\n                      disabled={techSubmitting}\n                    >\n                      <option value=\"\">-- Select vehicle --</option>\n                      {userVehicles.map((v: any) => (\n                        <option key={v.id} value={v.id}>\n                          {v.vehicleModel || v.model} ({v.vehicleType})\n                        </option>\n                      ))}\n                    </select>\n                  )}\n                </div>\n              )}\n              {/* Request Details */}\n              <textarea\n                className=\"w-full border border-gray-300 rounded-lg p-3 focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                rows={3}\n                placeholder=\"Describe the issue or service needed...\"\n                value={techRequestDetails}\n                onChange={e => setTechRequestDetails(e.target.value)}\n                disabled={techSubmitting}\n              />\n              {techError && <p className=\"text-red-500 text-sm\">{techError}</p>}\n              <div className=\"flex justify-end space-x-2\">\n                <button\n                  type=\"button\"\n                  className=\"bg-gray-200 text-gray-700 font-bold py-2 px-4 rounded-lg hover:bg-gray-300\"\n                  onClick={() => { setShowTechForm(false); setTechError(\"\"); setUserSearch(''); setUserSearchResults([]); setSelectedUser(null); setUserVehicles([]); setSelectedVehicleId(''); }}\n                >\n                  Cancel\n                </button>\n                <button\n                  type=\"submit\"\n                  className=\"bg-blue-600 text-white font-bold py-2 px-6 rounded-lg hover:bg-blue-700 transition-colors\"\n                  disabled={techSubmitting}\n                >\n                  {techSubmitting ? \"Submitting...\" : \"Submit\"}\n                </button>\n              </div>\n            </form>\n          </div>\n        </div>\n      )}\n      {/* Service Request Management */}\n      <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-8\">\n        {/* Incoming Requests */}\n        <div className=\"bg-white shadow-lg rounded-xl p-6\">\n          <h2 className=\"text-2xl font-bold text-gray-800 mb-4\">Incoming Requests</h2>\n          <div className=\"space-y-4\">\n            {requests.pending.length > 0 ? requests.pending.map((req: any) => (\n              <div key={req.id} className=\"p-6 border rounded-xl bg-gradient-to-br from-blue-50 to-white shadow-sm mb-6 transition-all duration-200 hover:shadow-md\">\n                <div className=\"flex flex-col gap-1 mb-2\">\n                  <span className=\"font-semibold text-blue-900 text-lg\">{req.authorName || 'User'}</span>\n                  <span className=\"text-xs text-blue-700 font-mono\">Request ID: {req.id}</span>\n                  <span className=\"text-xs text-gray-500\">{new Date(req.createdAt.seconds ? req.createdAt.seconds * 1000 : req.createdAt).toLocaleString()}</span>\n                </div>\n                <hr className=\"my-2 border-blue-100\" />\n                <div className=\"mb-2 text-gray-800 text-base font-medium whitespace-pre-line\">{req.requestDetails}</div>\n                <div className=\"text-xs text-gray-600 mb-2\">Vehicle: <span className=\"font-semibold\">{req.vehicleModel || '-'}</span> <span className=\"text-gray-400\">({req.vehicleType || '-'})</span></div>\n                <CollapsibleWarrantySection authorId={req.authorId} vehicleModel={req.vehicleModel} />\n                <div className=\"flex flex-col gap-2 mt-4\">\n                  <button onClick={() => onAccept(req.id)} className=\"w-full bg-green-500 text-white font-bold py-2 px-4 rounded-lg hover:bg-green-600\">Accept</button>\n                  <button onClick={() => openSearchModal(req.id)} className=\"w-full bg-purple-600 text-white font-bold py-2 px-4 rounded-lg hover:bg-purple-700\">Search solution from the manual</button>\n                </div>\n              </div>\n            )) : <p className=\"text-gray-500\">No pending requests.</p>}\n          </div>\n        </div>\n        {/* Active Services */}\n        <div className=\"bg-white shadow-lg rounded-xl p-6\">\n          <h2 className=\"text-2xl font-bold text-gray-800 mb-4\">Active Services</h2>\n          <div className=\"space-y-4\">\n            {requests.active.length > 0 ? requests.active.map((req: any) => (\n              <div key={req.id} className=\"p-6 border rounded-xl bg-gradient-to-br from-yellow-50 to-white shadow-sm mb-6 transition-all duration-200 hover:shadow-md\">\n                <div className=\"flex flex-col gap-1 mb-2\">\n                  <span className=\"font-semibold text-blue-900 text-lg\">{req.authorName || 'User'}</span>\n                  <span className=\"text-xs text-blue-700 font-mono\">Request ID: {req.id}</span>\n                  <span className=\"text-xs text-gray-500\">\n                    {req.acceptedAt && req.acceptedAt.seconds\n                      ? <Timer startTime={new Date(req.acceptedAt.seconds * 1000).toISOString()} />\n                      : 'Not started'}\n                  </span>\n                </div>\n                <hr className=\"my-2 border-yellow-100\" />\n                <div className=\"mb-2 text-gray-800 text-base font-medium whitespace-pre-line\">{req.requestDetails}</div>\n                <div className=\"text-xs text-gray-600 mb-2\">Vehicle: <span className=\"font-semibold\">{req.vehicleModel || '-'}</span> <span className=\"text-gray-400\">({req.vehicleType || '-'})</span></div>\n                <CollapsibleWarrantySection authorId={req.authorId} vehicleModel={req.vehicleModel} />\n                <div className=\"flex flex-col gap-2 mt-4\">\n                  {!req.acceptedAt && (\n                    <button onClick={() => handleStartRequest(req.id)} className=\"w-full bg-blue-500 text-white font-bold py-2 px-4 rounded-lg hover:bg-blue-600\">Start</button>\n                  )}\n                  {req.acceptedAt && (\n                    <button onClick={() => onClose(req.id)} className=\"w-full bg-red-500 text-white font-bold py-2 px-4 rounded-lg hover:bg-red-600\">Mark as Complete</button>\n                  )}\n                  <button onClick={() => openSearchModal(req.id)} className=\"w-full bg-purple-600 text-white font-bold py-2 px-4 rounded-lg hover:bg-purple-700\">Search solution from the manual</button>\n                </div>\n              </div>\n            )) : <p className=\"text-gray-500\">No active services.</p>}\n          </div>\n        </div>\n        {/* Service History */}\n        <div className=\"bg-white shadow-lg rounded-xl p-6\">\n          <h2 className=\"text-2xl font-bold text-gray-800 mb-4\">Service History</h2>\n          <div className=\"space-y-4\">\n            {requests.closed.length > 0 ? requests.closed.map((req: any) => (\n              <CollapsibleWarrantyCard key={req.id} req={req} />\n            )) : <p className=\"text-gray-500\">No completed services.</p>}\n          </div>\n        </div>\n      </div>\n      {/* Search Modal */}\n      {searchModal.open && (\n        <div className=\"fixed inset-0 z-50 flex items-center justify-center bg-black bg-opacity-40\">\n          <div className=\"relative w-full max-w-xl mx-auto bg-white rounded-2xl shadow-2xl p-8 border border-blue-200 max-h-[90vh] overflow-y-auto animate-fadeIn\">\n            <button\n              className=\"absolute top-4 right-4 text-gray-400 hover:text-gray-700 text-2xl font-bold focus:outline-none\"\n              onClick={closeSearchModal}\n              aria-label=\"Close\"\n            >\n              ×\n            </button>\n            <h2 className=\"text-2xl font-extrabold text-blue-700 mb-4 text-center tracking-tight\">Manual AI Solution</h2>\n            <form onSubmit={handleSearch} className=\"mb-6\">\n              <label className=\"block text-gray-700 font-semibold mb-2\">Describe your problem or question:</label>\n              <textarea\n                className=\"w-full border border-blue-300 rounded-lg p-3 focus:ring-2 focus:ring-blue-400 focus:outline-none resize-none min-h-[80px] mb-2\"\n                value={searchQuery}\n                onChange={e => setSearchQuery(e.target.value)}\n                placeholder=\"E.g. How do I refill oil in NHL 40 gearbox?\"\n                required\n              />\n              <button\n                type=\"submit\"\n                className=\"w-full bg-blue-600 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded-lg shadow mt-2 transition-colors duration-150\"\n                disabled={searchLoading}\n              >\n                {searchLoading ? 'Searching...' : 'Get Solution'}\n              </button>\n            </form>\n            {searchError && <div className=\"text-red-600 font-semibold mb-2\">{searchError}</div>}\n            {searchResult && (\n              <div className=\"mt-4\">\n                <h3 className=\"font-bold text-lg mb-2 text-blue-700\">AI Solution</h3>\n                <div className=\"bg-gray-50 border border-blue-100 rounded-lg p-4 mb-2 max-h-60 overflow-y-auto prose prose-blue\">\n                  <ReactMarkdown>{searchResult.answer}</ReactMarkdown>\n                </div>\n                {/* YouTube Video Suggestion */}\n                {searchResult.youtube && (\n                  <div className=\"mt-4 bg-white border border-red-200 rounded-lg p-4 shadow-sm\">\n                    <h4 className=\"font-bold text-red-600 mb-2 flex items-center gap-2\">\n                      <svg className=\"w-5 h-5 text-red-500 inline-block\" fill=\"currentColor\" viewBox=\"0 0 24 24\"><path d=\"M23.498 6.186a2.994 2.994 0 0 0-2.107-2.12C19.077 3.5 12 3.5 12 3.5s-7.077 0-9.391.566A2.994 2.994 0 0 0 .502 6.186C0 8.5 0 12 0 12s0 3.5.502 5.814a2.994 2.994 0 0 0 2.107 2.12C4.923 20.5 12 20.5 12 20.5s7.077 0 9.391-.566a2.994 2.994 0 0 0 2.107-2.12C24 15.5 24 12 24 12s0-3.5-.502-5.814zM9.75 15.5v-7l6.5 3.5-6.5 3.5z\"/></svg>\n                      Suggested YouTube Video\n                    </h4>\n                    <div className=\"flex gap-4 items-start\">\n                      <a href={searchResult.youtube.url} target=\"_blank\" rel=\"noopener noreferrer\">\n                        <img src={searchResult.youtube.thumbnail} alt=\"YouTube thumbnail\" className=\"w-32 h-20 rounded-lg border\" />\n                      </a>\n                      <div className=\"flex-1\">\n                        <a href={searchResult.youtube.url} target=\"_blank\" rel=\"noopener noreferrer\" className=\"font-semibold text-blue-700 hover:underline block mb-1\">\n                          {searchResult.youtube.title}\n                        </a>\n                        {searchResult.youtube.chapters && searchResult.youtube.chapters.length > 0 ? (\n                          <div className=\"mt-2\">\n                            <span className=\"font-semibold text-gray-700\">Video Timeline:</span>\n                            <ul className=\"list-disc ml-5 mt-1 text-sm\">\n                              {searchResult.youtube.chapters.map((ch: any, idx: number) => (\n                                <li key={idx}>\n                                  <a\n                                    href={`${searchResult.youtube.url}&t=${ch.time.replace(/:/g, 'm').replace('m', 's')}`}\n                                    target=\"_blank\"\n                                    rel=\"noopener noreferrer\"\n                                    className=\"text-blue-600 hover:underline font-mono mr-2\"\n                                  >\n                                    {ch.time}\n                                  </a>\n                                  <span className=\"text-gray-700\">{ch.title}</span>\n                                </li>\n                              ))}\n                            </ul>\n                          </div>\n                        ) : (\n                          <div className=\"mt-2 text-sm text-gray-500 italic\">No suggested timeline available for this video.</div>\n                        )}\n                      </div>\n                    </div>\n                  </div>\n                )}\n                {/* End YouTube Video Suggestion */}\n                {searchResult.relevantSections && searchResult.relevantSections.length > 0 && (\n                  <div className=\"text-xs text-gray-600 max-h-32 overflow-y-auto mt-2\">\n                    <b>Relevant Manual Sections:</b>\n                    <ul className=\"list-disc ml-5\">\n                      {searchResult.relevantSections.map((section: any, idx: number) => (\n                        <li key={idx}>\n                          <b>Page {section.page}:</b> {section.text.slice(0, 120)}{section.text.length > 120 ? '...' : ''}\n                        </li>\n                      ))}\n                    </ul>\n                  </div>\n                )}\n              </div>\n            )}\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\n\n// --- Manager Components ---\nconst ManagerDashboard = ({ profile, allRequests, technicians, onAssign, onAssignAI, aiLoading, aiError, aiAssignedId, onBulkAssignAI, bulkLoading, bulkResult }: any) => {\n    const [assignments, setAssignments] = useState<{ [key: string]: string }>({});\n    const [searchTerm, setSearchTerm] = useState(\"\");\n    const [searchType, setSearchType] = useState(\"id\"); // 'id' or 'requester'\n    const [filteredRequests, setFilteredRequests] = useState<any[]>(allRequests);\n    const [currentPage, setCurrentPage] = useState(1);\n    const requestsPerPage = 30;\n    const totalPages = Math.ceil(filteredRequests.length / requestsPerPage);\n\n    useEffect(() => {\n        setCurrentPage(1); // Reset to first page on new search\n        if (!searchTerm) {\n            setFilteredRequests(allRequests);\n        } else {\n            setFilteredRequests(\n                allRequests.filter((req: any) =>\n                    searchType === 'id'\n                        ? req.id.toLowerCase().includes(searchTerm.toLowerCase())\n                        : (req.authorName || '').toLowerCase().includes(searchTerm.toLowerCase())\n                )\n            );\n        }\n    }, [searchTerm, searchType, allRequests]);\n\n    // Calculate paginated requests\n    const paginatedRequests: any[] = filteredRequests.slice(\n        (currentPage - 1) * requestsPerPage,\n        currentPage * requestsPerPage\n    );\n    // Helper for pagination page numbers\n    const pageNumbers: number[] = [];\n    for (let i = 1; i <= totalPages; i++) {\n      pageNumbers.push(i);\n    }\n\n    const activeTechnicianIds = new Set(\n        allRequests\n            .filter((req: any) => req.status === 'active')\n            .map((req: any) => req.technicianId)\n    );\n\n    const getStatusPill = (status: string) => {\n        switch (status) {\n            case 'pending': return <span className=\"px-2 py-1 text-xs font-semibold text-yellow-800 bg-yellow-200 rounded-full\">Pending</span>;\n            case 'active': return <span className=\"px-2 py-1 text-xs font-semibold text-green-800 bg-green-200 rounded-full\">Active</span>;\n            case 'closed': return <span className=\"px-2 py-1 text-xs font-semibold text-blue-800 bg-blue-200 rounded-full\">Closed</span>;\n            default: return <span className=\"px-2 py-1 text-xs font-semibold text-gray-800 bg-gray-200 rounded-full\">Unknown</span>;\n        }\n    };\n\n    // Helper function for date formatting\n    function formatDate(date: any) {\n      if (!date) return \"N/A\";\n      if (typeof date === 'string' || date instanceof Date) return new Date(date).toLocaleString();\n      if (date.seconds) return new Date(date.seconds * 1000).toLocaleString();\n      return \"N/A\";\n    }\n\n    // Pagination component\n    const Pagination = ({ currentPage, totalPages, setCurrentPage }: { currentPage: number, totalPages: number, setCurrentPage: (page: number) => void }) => {\n      if (totalPages <= 1) return null;\n      const pageNumbers: number[] = [];\n      for (let i = 1; i <= totalPages; i++) {\n        pageNumbers.push(i);\n      }\n      return (\n        <div className=\"flex justify-between items-center mt-4\">\n          <button\n            onClick={() => setCurrentPage(Math.max(1, currentPage - 1))}\n            disabled={currentPage === 1}\n            className=\"px-3 py-1 bg-gray-200 rounded disabled:opacity-50\"\n          >\n            Prev\n          </button>\n          <div className=\"space-x-1\">\n            {pageNumbers.map((page) => (\n              <button\n                key={page}\n                onClick={() => setCurrentPage(page)}\n                className={`px-3 py-1 rounded ${currentPage === page ? 'bg-blue-600 text-white' : 'bg-gray-100 text-gray-700'}`}\n              >\n                {page}\n              </button>\n            ))}\n          </div>\n          <button\n            onClick={() => setCurrentPage(Math.min(totalPages, currentPage + 1))}\n            disabled={currentPage === totalPages}\n            className=\"px-3 py-1 bg-gray-200 rounded disabled:opacity-50\"\n          >\n            Next\n          </button>\n        </div>\n      );\n    };\n\n    return (\n        <div className=\"max-w-7xl mx-auto space-y-8\">\n            <div className=\"text-center\">\n                <h1 className=\"text-4xl font-bold\">Manager Dashboard</h1>\n                <p className=\"text-lg text-gray-600\">Welcome, {profile.firstName}!</p>\n            </div>\n\n            {/* Search Bar */}\n            <div className=\"mb-4 flex flex-col sm:flex-row sm:items-center gap-2 justify-between\">\n              <div className=\"flex gap-2 items-center\">\n                <select\n                  value={searchType}\n                  onChange={e => setSearchType(e.target.value)}\n                  className=\"border rounded p-2 text-sm\"\n                >\n                  <option value=\"id\">Request ID</option>\n                  <option value=\"requester\">Requester</option>\n                </select>\n                <input\n                  type=\"text\"\n                  placeholder={`Search by ${searchType === 'id' ? 'Request ID' : 'Requester'}`}\n                  value={searchTerm}\n                  onChange={e => setSearchTerm(e.target.value)}\n                  className=\"border rounded p-2 text-sm\"\n                />\n                <button\n                  onClick={() => setSearchTerm(\"\")}\n                  className=\"bg-gray-200 text-gray-700 px-3 py-1 rounded text-sm\"\n                >\n                  Clear\n                </button>\n              </div>\n              <button\n                onClick={onBulkAssignAI}\n                disabled={bulkLoading}\n                className=\"px-4 py-2 bg-purple-700 text-white font-semibold rounded-md shadow-sm hover:bg-purple-800 disabled:bg-gray-400\"\n              >\n                {bulkLoading ? 'Bulk Assigning by AI...' : 'Bulk Assign All by AI'}\n              </button>\n            </div>\n            {bulkResult && (\n                <div className=\"mb-4\">\n                    <div className=\"text-green-700 font-semibold\">Assigned: {bulkResult.assignments.length}</div>\n                    {bulkResult.errors.length > 0 && (\n                        <div className=\"text-red-600 text-sm\">Errors: {bulkResult.errors.map((e: any) => `Request ${e.requestId}: ${e.error}`).join(', ')}</div>\n                    )}\n                </div>\n            )}\n\n            <div className=\"grid grid-cols-1 xl:grid-cols-5 gap-8\">\n                {/* Service Requests Overview */}\n                <div className=\"bg-white shadow-lg rounded-xl p-6 xl:col-span-3\">\n                    <h2 className=\"text-2xl font-bold text-gray-800 mb-4\">All Service Requests</h2>\n                    <div className=\"overflow-x-auto\">\n                        <table className=\"min-w-full divide-y divide-gray-200\">\n                            <thead className=\"bg-gray-50\">\n                                <tr>\n                                    <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Request ID</th>\n                                    <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Requester</th>\n                                    <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Details</th>\n                                    <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Vehicle Model</th>\n                                    <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Vehicle Type</th>\n                                    <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Technician</th>\n                                    <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Status</th>\n                                    <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Created At</th>\n                                    <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Actions</th>\n                                </tr>\n                            </thead>\n                            <tbody className=\"bg-white divide-y divide-gray-200\">\n                                {Array.isArray(paginatedRequests) ? paginatedRequests.map((req: any) => (\n                                    <tr key={req.id}>\n                                        <td className=\"px-6 py-4 whitespace-nowrap font-mono text-blue-700\">{req.id}</td>\n                                        <td className=\"px-6 py-4 whitespace-nowrap\">{req.authorName || 'N/A'}</td>\n                                        <td className=\"px-6 py-4 whitespace-nowrap\">{req.requestDetails}</td>\n                                        <td className=\"px-6 py-4 whitespace-nowrap\">{req.vehicleModel || '-'}</td>\n                                        <td className=\"px-6 py-4 whitespace-nowrap\">{req.vehicleType || '-'}</td>\n                                        <td className=\"px-6 py-4 whitespace-nowrap\">{req.technicianName || 'Unassigned'}</td>\n                                        <td className=\"px-6 py-4 whitespace-nowrap\">\n                                          {req.status === 'active'\n                                            ? (\n                                              <span className=\"px-2 py-1 text-xs font-semibold text-green-800 bg-green-200 rounded-full\">\n                                                Active {req.acceptedAt ? '(Started)' : '(Not started)'}\n                                              </span>\n                                            )\n                                            : getStatusPill(req.status)}\n                                        </td>\n                                        <td className=\"px-6 py-4 whitespace-nowrap\">{req.createdAt ? new Date(req.createdAt).toLocaleString() : \"N/A\"}</td>\n                                        <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium\">\n                                            {req.status === 'pending' && (\n                                                <div className=\"flex flex-col space-y-2\">\n                                                    <div className=\"flex items-center space-x-2\">\n                                                        <select\n                                                            value={assignments[req.id] || ''}\n                                                            onChange={(e) => setAssignments({ ...assignments, [req.id]: e.target.value })}\n                                                            className=\"block w-full pl-3 pr-10 py-2 text-base border-gray-300 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm rounded-md\"\n                                                        >\n                                                            <option value=\"\" disabled>\n                                                                {technicians.filter((t: any) => !activeTechnicianIds.has(t.id)).length === 0\n                                                                    ? \"No available technicians\"\n                                                                    : \"Select Technician\"}\n                                                            </option>\n                                                            {technicians.filter((t: any) => !activeTechnicianIds.has(t.id)).map((tech: any) => (\n                                                                <option key={tech.id} value={tech.id}>{tech.firstName} {tech.lastName}</option>\n                                                            ))}\n                                                        </select>\n                                                        <button\n                                                            onClick={() => onAssign(req.id, assignments[req.id])}\n                                                            disabled={!assignments[req.id]}\n                                                            className=\"px-3 py-2 bg-blue-600 text-white font-semibold rounded-md shadow-sm hover:bg-blue-700 disabled:bg-gray-400\"\n                                                        >\n                                                            Assign\n                                                        </button>\n                                                    </div>\n                                                    <button\n                                                        onClick={() => onAssignAI(req.id)}\n                                                        disabled={aiLoading === req.id}\n                                                        className=\"px-3 py-2 bg-purple-600 text-white font-semibold rounded-md shadow-sm hover:bg-purple-700 disabled:bg-gray-400 mt-1\"\n                                                    >\n                                                        {aiLoading === req.id ? 'Assigning by AI...' : 'Assign Technician by AI'}\n                                                    </button>\n                                                    {aiError && aiLoading === req.id && (\n                                                        <span className=\"text-red-500 text-xs\">{aiError}</span>\n                                                    )}\n                                                    {aiAssignedId === req.id && (\n                                                        <span className=\"text-green-600 text-xs\">Assigned by AI!</span>\n                                                    )}\n                                                </div>\n                                            )}\n                                        </td>\n                                    </tr>\n                                )) : null}\n                            </tbody>\n                        </table>\n                    </div>\n                    {/* Pagination Controls */}\n                    <Pagination currentPage={currentPage} totalPages={totalPages} setCurrentPage={setCurrentPage} />\n                </div>\n\n                {/* Technicians List */}\n                <div className=\"bg-white shadow-lg rounded-xl p-6 xl:col-span-2\">\n                    <h2 className=\"text-2xl font-bold text-gray-800 mb-4\">Technicians</h2>\n                    <div className=\"overflow-x-auto\">\n                        <table className=\"min-w-full divide-y divide-gray-200\">\n                            <thead className=\"bg-gray-50\">\n                                <tr>\n                                    <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Name</th>\n                                    <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Title</th>\n                                    <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Status</th>\n                                </tr>\n                            </thead>\n                            <tbody className=\"bg-white divide-y divide-gray-200\">\n                                {technicians.map((tech: any) => {\n                                    const isBusy = activeTechnicianIds.has(tech.id);\n                                    return (\n                                        <tr key={tech.id}>\n                                            <td className=\"px-6 py-4 whitespace-nowrap\">\n                                                <div className=\"text-sm font-medium text-gray-900\">{tech.firstName} {tech.lastName}</div>\n                                                <div className=\"text-sm text-gray-500\">{tech.email}</div>\n                                            </td>\n                                            <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-700\">{tech.title}</td>\n                                            <td className=\"px-6 py-4 whitespace-nowrap\">\n                                                {isBusy ? (\n                                                    <span className=\"px-2 py-1 text-xs font-semibold text-orange-800 bg-orange-200 rounded-full\">On a Job</span>\n                                                ) : (\n                                                    <span className=\"px-2 py-1 text-xs font-semibold text-green-800 bg-green-200 rounded-full\">Available</span>\n                                                )}\n                                            </td>\n                                        </tr>\n                                    );\n                                })}\n                            </tbody>\n                        </table>\n                    </div>\n                </div>\n            </div>\n\n            {/* Metrics Dashboard */}\n            <div className=\"bg-white shadow-lg rounded-xl p-6\">\n                <MetricsDashboard user={auth.currentUser} />\n            </div>\n        </div>\n    );\n};\n\nconst UserDashboard = ({ profile, userRequests, onSubmitRequest }: any) => {\n  const [requestDetails, setRequestDetails] = useState(\"\");\n  const [submitting, setSubmitting] = useState(false);\n  const [error, setError] = useState(\"\");\n  const [showForm, setShowForm] = useState(false);\n  const [vehicles, setVehicles] = useState<any[]>([]);\n  const [vehicleLoading, setVehicleLoading] = useState(true);\n  const [selectedVehicleId, setSelectedVehicleId] = useState<string>(\"\");\n\n  useEffect(() => {\n    const fetchVehicles = async () => {\n      setVehicleLoading(true);\n      try {\n        const user = auth.currentUser;\n        if (!user) return;\n        const idToken = await user.getIdToken();\n        const res = await axios.get('http://localhost:4000/profile/vehicles', {\n          headers: { Authorization: `Bearer ${idToken}` }\n        });\n        setVehicles(res.data.vehicles || []);\n      } catch (err) {\n        setVehicles([]);\n      } finally {\n        setVehicleLoading(false);\n      }\n    };\n    fetchVehicles();\n  }, []);\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n    setError(\"\");\n    if (!selectedVehicleId) {\n      setError(\"Please select a vehicle for this request.\");\n      return;\n    }\n    if (!requestDetails.trim()) {\n      setError(\"Please enter your service request details.\");\n      return;\n    }\n    setSubmitting(true);\n    await onSubmitRequest(requestDetails, setError, selectedVehicleId);\n    setSubmitting(false);\n    setRequestDetails(\"\");\n    setSelectedVehicleId(\"\");\n    setShowForm(false);\n  };\n\n  const statusColor = (status: string) => status === 'Active' ? 'text-green-600' : 'text-red-600';\n\n  return (\n    <div className=\"max-w-2xl mx-auto space-y-8\">\n      <div className=\"bg-white shadow-lg rounded-xl p-6\">\n        <div className=\"flex justify-between items-center mb-4\">\n          <h1 className=\"text-2xl font-bold\">Welcome, {profile.firstName}!</h1>\n          <button\n            className=\"bg-blue-600 text-white font-bold py-2 px-4 rounded-lg hover:bg-blue-700 transition-colors\"\n            onClick={() => setShowForm(true)}\n          >\n            Add Service\n          </button>\n        </div>\n        {/* Vehicle Info Section */}\n        <div className=\"mb-8\">\n          <h2 className=\"text-2xl font-extrabold mb-4 flex items-center gap-2 text-blue-800\">\n            <FaCar className=\"inline-block text-blue-500\" /> Your Vehicles\n          </h2>\n          {vehicleLoading ? (\n            <p className=\"text-gray-500\">Loading vehicles...</p>\n          ) : vehicles.length === 0 ? (\n            <p className=\"text-gray-500\">No vehicles added yet.</p>\n          ) : (\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n              {vehicles.map(vehicle => (\n                <CollapsibleWarrantyUserVehicle key={vehicle.id} vehicle={vehicle} />\n              ))}\n            </div>\n          )}\n        </div>\n        {/* End Vehicle Info Section */}\n        {showForm && (\n          <div className=\"fixed inset-0 flex items-center justify-center z-50 bg-black bg-opacity-30\">\n            <div className=\"bg-white rounded-lg shadow-xl p-6 w-full max-w-md relative\">\n              <button\n                className=\"absolute top-2 right-2 text-gray-400 hover:text-gray-700 text-xl font-bold\"\n                onClick={() => { setShowForm(false); setError(\"\"); }}\n                aria-label=\"Close\"\n              >\n                ×\n              </button>\n              <h2 className=\"text-xl font-bold mb-2\">New Service Request</h2>\n              <form onSubmit={handleSubmit} className=\"space-y-4\">\n                <label htmlFor=\"vehicle\" className=\"font-medium\">Select Vehicle</label>\n                <select\n                  id=\"vehicle\"\n                  value={selectedVehicleId}\n                  onChange={e => setSelectedVehicleId(e.target.value)}\n                  className=\"w-full border border-gray-300 rounded-lg p-2 focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                  required\n                  disabled={submitting || vehicleLoading}\n                >\n                  <option value=\"\">-- Select your vehicle --</option>\n                  {vehicles.map((v: any) => (\n                    <option key={v.id} value={v.id}>\n                      {v.vehicleModel || v.model} ({v.vehicleType})\n                    </option>\n                  ))}\n                </select>\n                <textarea\n                  className=\"w-full border border-gray-300 rounded-lg p-3 focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                  rows={3}\n                  placeholder=\"Describe your issue or service needed...\"\n                  value={requestDetails}\n                  onChange={e => setRequestDetails(e.target.value)}\n                  disabled={submitting}\n                  autoFocus\n                />\n                {error && <p className=\"text-red-500 text-sm\">{error}</p>}\n                <div className=\"flex justify-end space-x-2\">\n                  <button\n                    type=\"button\"\n                    className=\"bg-gray-200 text-gray-700 font-bold py-2 px-4 rounded-lg hover:bg-gray-300\"\n                    onClick={() => { setShowForm(false); setError(\"\"); }}\n                  >\n                    Cancel\n                  </button>\n                  <button\n                    type=\"submit\"\n                    className=\"bg-blue-600 text-white font-bold py-2 px-6 rounded-lg hover:bg-blue-700 transition-colors\"\n                    disabled={submitting}\n                  >\n                    {submitting ? \"Submitting...\" : \"Submit\"}\n                  </button>\n                </div>\n              </form>\n            </div>\n          </div>\n        )}\n      </div>\n      <div className=\"bg-white shadow-lg rounded-xl p-6 mt-8\">\n        <h2 className=\"text-2xl font-extrabold mb-4 text-blue-800 flex items-center gap-2\"><FaTools className=\"text-blue-500\" /> Your Service Requests</h2>\n        {userRequests.length === 0 ? (\n          <p className=\"text-gray-500\">No requests yet.</p>\n        ) : (\n          <ul className=\"divide-y divide-gray-200\">\n            {userRequests.map((req: any) => (\n              <li key={req.id} className=\"py-4\">\n                <div className=\"flex justify-between items-center\">\n                  <div>\n                    <p className=\"font-semibold\">Request ID: <span className=\"text-blue-700 font-mono\">{req.id}</span></p>\n                    <p className=\"font-semibold\">{req.requestDetails}</p>\n                    <p className=\"text-xs text-gray-500\">Submitted: {req.createdAt ? new Date(req.createdAt).toLocaleString() : \"N/A\"}</p>\n                    {req.vehicleModel && (\n                      <p className=\"text-xs text-gray-600 mt-1\">Vehicle: {req.vehicleModel} ({req.vehicleType})</p>\n                    )}\n                  </div>\n                  <span className={\n                    req.status === 'pending' ? 'px-3 py-1 rounded-full bg-yellow-100 text-yellow-800 text-xs font-semibold' :\n                    req.status === 'active' ? 'px-3 py-1 rounded-full bg-green-100 text-green-800 text-xs font-semibold' :\n                    req.status === 'closed' ? 'px-3 py-1 rounded-full bg-blue-100 text-blue-800 text-xs font-semibold' :\n                    'px-3 py-1 rounded-full bg-gray-100 text-gray-800 text-xs font-semibold'\n                  }>\n                    {req.status.charAt(0).toUpperCase() + req.status.slice(1)}\n                  </span>\n                </div>\n                {req.technicianName && (\n                  <p className=\"text-xs text-gray-600 mt-1\">Assigned to: {req.technicianName}</p>\n                )}\n              </li>\n            ))}\n          </ul>\n        )}\n      </div>\n    </div>\n  );\n};\n\n// Helper function for date formatting\nfunction formatDate(date: any) {\n  if (!date) return \"N/A\";\n  if (typeof date === 'string' || date instanceof Date) return new Date(date).toLocaleString();\n  if (date.seconds) return new Date(date.seconds * 1000).toLocaleString();\n  return \"N/A\";\n}\n\n// Helper for warranty status color (moved to top level for reuse)\nfunction statusColor(status: string) {\n  return status === 'Active' ? 'text-green-600' : 'text-red-600';\n}\n\n// Collapsible Warranty Card for Service History\nconst CollapsibleWarrantyCard = ({ req }: { req: any }) => {\n  const [open, setOpen] = useState<boolean>(false);\n  return (\n    <div className=\"p-6 border rounded-xl bg-gradient-to-br from-blue-50 to-white shadow-sm mb-6 transition-all duration-200 hover:shadow-md\">\n      <div className=\"flex flex-col gap-1 mb-2\">\n        <span className=\"font-bold text-lg text-blue-900\">{req.vehicleModel || 'Vehicle'}</span>\n        <span className=\"text-xs text-blue-700 font-mono\">Request ID: {req.id}</span>\n        <span className=\"text-xs text-gray-500\">Closed: {formatDate(req.closedAt)}</span>\n        <span className=\"text-xs text-gray-400\">{req.authorName || 'User'}</span>\n      </div>\n      <hr className=\"my-2 border-blue-100\" />\n      <div className=\"mt-2 text-gray-700 text-base font-medium truncate max-w-full\" title={req.requestDetails}>{req.requestDetails}</div>\n      <div className=\"text-xs text-gray-600 mb-2\">Vehicle: <span className=\"font-semibold\">{req.vehicleModel || '-'}</span> <span className=\"text-gray-400\">({req.vehicleType || '-'})</span></div>\n      <button\n        className=\"mt-2 text-blue-600 hover:underline text-sm focus:outline-none\"\n        onClick={() => setOpen((o: boolean) => !o)}\n        aria-expanded={open}\n      >\n        {open ? 'Hide Warranty Details' : 'Show Warranty Details'}\n      </button>\n      {open && (\n        <div className=\"mt-4 animate-fadeIn\">\n          <WarrantyInfo authorId={req.authorId} vehicleModel={req.vehicleModel} />\n        </div>\n      )}\n    </div>\n  );\n};\n\n// Add a CollapsibleWarrantySection for warranty info in request cards\nconst CollapsibleWarrantySection = ({ authorId, vehicleModel }: { authorId: string, vehicleModel: string }) => {\n  const [open, setOpen] = useState(false);\n  if (!authorId || !vehicleModel) return null;\n  return (\n    <div className=\"mt-2\">\n      <button\n        className=\"text-blue-600 hover:underline text-sm focus:outline-none mb-1\"\n        onClick={() => setOpen(o => !o)}\n        aria-expanded={open}\n      >\n        {open ? 'Hide Warranty Details' : 'Show Warranty Details'}\n      </button>\n      {open && <WarrantyInfo authorId={authorId} vehicleModel={vehicleModel} />}\n    </div>\n  );\n};\n\n// Collapsible warranty for user vehicles\nconst CollapsibleWarrantyUserVehicle = ({ vehicle }: { vehicle: any }) => {\n  const [showWarranty, setShowWarranty] = useState(false);\n  return (\n    <div className=\"bg-white rounded-xl shadow-lg p-6 border border-blue-100 flex flex-col gap-2\">\n      <div className=\"flex items-center gap-3 mb-2\">\n        <FaCar className=\"text-2xl text-blue-500\" />\n        <span className=\"text-lg font-bold capitalize\">{vehicle.model || vehicle.vehicleModel || '-'} ({vehicle.vehicleType})</span>\n      </div>\n      <div className=\"flex flex-wrap gap-4 mb-2\">\n        <span className=\"flex items-center gap-1 text-gray-700\"><FaCalendarAlt /> <b>Purchase:</b> {vehicle.purchaseDate ? dayjs(vehicle.purchaseDate).format('YYYY-MM-DD') : '-'}</span>\n        <span className=\"flex items-center gap-1 text-gray-700\"><FaTachometerAlt /> <b>Odometer:</b> {vehicle.odometerKm || '-'} km</span>\n      </div>\n      {/* Warranty Info Collapsible */}\n      {vehicle.warranty && (\n        <div className=\"mt-2\">\n          <button\n            className=\"text-blue-600 hover:underline text-sm focus:outline-none mb-1\"\n            onClick={() => setShowWarranty(w => !w)}\n            aria-expanded={showWarranty}\n          >\n            {showWarranty ? 'Hide Warranty Details' : 'Show Warranty Details'}\n          </button>\n          {showWarranty && (\n            <div className=\"bg-gray-50 border border-gray-200 rounded p-3 mt-2\">\n              <h4 className=\"font-semibold mb-2 text-blue-700 flex items-center gap-2\"><FaShieldAlt /> Warranty Status</h4>\n              <div className=\"flex flex-wrap gap-4 justify-center\">\n                {Object.entries(vehicle.warranty).map(([component, details]: any) => (\n                  <div key={component} className=\"bg-white rounded p-3 border border-gray-100 shadow-sm mb-2 min-w-[220px] max-w-xs flex-1\">\n                    <div className=\"flex items-center gap-2 mb-2\">\n                      {component.toLowerCase().includes('battery') && <FaBatteryFull className=\"text-yellow-500\" />}\n                      {component.toLowerCase().includes('engine') && <FaCogs className=\"text-gray-700\" />}\n                      {component.toLowerCase().includes('motor') && <FaTools className=\"text-purple-600\" />}\n                      {component.toLowerCase().includes('transmission') && <FaCogs className=\"text-blue-600\" />}\n                      {component.toLowerCase().includes('rust') && <FaExclamationCircle className=\"text-orange-600\" />}\n                      <span className=\"font-medium text-gray-800 text-base\">{component}</span>\n                    </div>\n                    <ul className=\"ml-2 text-sm space-y-1\">\n                      {Object.entries(details as Record<string, any>).map(([k, v]) => (\n                        <li key={k} className={k === 'Status' ? statusColor(v as string) + ' font-semibold' : ''}>\n                          <b>{k}:</b> {v as string | number | boolean | null}\n                          {k === 'Status' && (v === 'Active' ? <FaCheckCircle className=\"inline ml-1 text-green-500\" /> : <FaExclamationCircle className=\"inline ml-1 text-red-500\" />)}\n                        </li>\n                      ))}\n                    </ul>\n                  </div>\n                ))}\n              </div>\n            </div>\n          )}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default function DashboardPage() {\n  const router = useRouter();\n  const [profile, setProfile] = useState<any>(null);\n  const [loading, setLoading] = useState(true);\n  const [techRequests, setTechRequests] = useState({ pending: [], active: [], closed: [] });\n  const [managerData, setManagerData] = useState({ allRequests: [], technicians: [] });\n  const [apiError, setApiError] = useState<string | null>(null);\n  const [userRequests, setUserRequests] = useState<any[]>([]);\n  const [aiLoading, setAiLoading] = useState<string | null>(null);\n  const [aiError, setAiError] = useState<string | null>(null);\n  const [aiAssignedId, setAiAssignedId] = useState<string | null>(null);\n  const [bulkLoading, setBulkLoading] = useState(false);\n  const [bulkResult, setBulkResult] = useState<any>(null);\n\n  const getAuthHeader = async () => {\n    const user = auth.currentUser;\n    if (!user) return { headers: {} };\n    const idToken = await user.getIdToken();\n    return { headers: { Authorization: `Bearer ${idToken}` } };\n  };\n  \n  const fetchTechnicianData = async () => {\n      const config = await getAuthHeader();\n      if (!config.headers) return;\n\n      const [pendingRes, activeRes, closedRes] = await Promise.all([\n        axios.get(\"http://localhost:4000/requests/pending\", config),\n        axios.get(\"http://localhost:4000/requests/active\", config),\n        axios.get(\"http://localhost:4000/requests/closed\", config)\n      ]);\n      \n      setTechRequests({ pending: pendingRes.data, active: activeRes.data, closed: closedRes.data });\n  };\n  \n  const fetchManagerData = async () => {\n      const config = await getAuthHeader();\n      if (!config.headers) return;\n\n      const [requestsRes, techsRes] = await Promise.all([\n          axios.get(\"http://localhost:4000/requests/all\", config),\n          axios.get(\"http://localhost:4000/users/technicians\", config)\n      ]);\n\n      setManagerData({ allRequests: requestsRes.data, technicians: techsRes.data });\n  };\n  \n  const fetchUserRequests = async () => {\n    const config = await getAuthHeader();\n    if (!config.headers) return;\n    try {\n      const res = await axios.get(\"http://localhost:4000/requests/mine\", config);\n      setUserRequests(res.data);\n    } catch (err) {\n      setApiError(\"Could not load your service requests.\");\n    }\n  };\n\n  const handleSubmitUserRequest = async (details: string, setError: (msg: string) => void, vehicleId: string) => {\n    try {\n      const config = await getAuthHeader();\n      await axios.post(\"http://localhost:4000/requests\", { requestDetails: details, vehicleId }, config);\n      await fetchUserRequests();\n    } catch (error: any) {\n      setError(error?.response?.data?.error || \"Failed to submit request.\");\n    }\n  };\n\n  useEffect(() => {\n    const unsubscribe = onAuthStateChanged(auth, async (user) => {\n      if (user) {\n        try {\n          const idToken = await user.getIdToken();\n          const res = await axios.post(\"http://localhost:4000/login\", { idToken });\n          const userProfile = res.data;\n          setProfile(userProfile);\n\n          if (userProfile.role === 'manager') {\n            await fetchManagerData();\n          } else if (userProfile.role === 'technician') {\n            await fetchTechnicianData();\n          } else if (userProfile.role === 'user') {\n            await fetchUserRequests();\n          }\n          setApiError(null);\n        } catch (err) {\n          setProfile(null);\n          setApiError(\"Failed to load dashboard data.\");\n        } finally {\n          setLoading(false);\n        }\n      } else {\n        router.push('/login');\n      }\n    });\n    return () => unsubscribe();\n  }, [router]);\n\n  const handleAcceptRequest = async (requestId: string) => {\n    try {\n      const config = await getAuthHeader();\n      await axios.put(`http://localhost:4000/requests/${requestId}/accept`, {}, config);\n      await fetchTechnicianData();\n    } catch (error) {\n      console.error(\"Failed to accept request:\", error);\n    }\n  };\n  \n  const handleCloseRequest = async (requestId: string) => {\n    try {\n      const config = await getAuthHeader();\n      await axios.put(`http://localhost:4000/requests/${requestId}/close`, {}, config);\n      await fetchTechnicianData();\n    } catch (error) {\n      console.error(\"Failed to close request:\", error);\n    }\n  };\n\n  const handleAssignRequest = async (requestId: string, technicianId: string) => {\n    if (!technicianId) {\n        alert(\"Please select a technician to assign.\");\n        return;\n    }\n    try {\n        const config = await getAuthHeader();\n        const response = await axios.put(`http://localhost:4000/requests/${requestId}/assign`, { technicianId }, config);\n        console.log(\"Assignment successful:\", response.data);\n        \n        // Add a small delay before refreshing data to avoid race conditions\n        setTimeout(async () => {\n            try {\n                await fetchManagerData(); // Re-fetch manager data to update UI\n            } catch (refreshError) {\n                console.error(\"Error refreshing data after assignment:\", refreshError);\n            }\n        }, 500);\n        \n    } catch (error: any) {\n        console.error(\"Failed to assign request:\", error);\n        const errorMessage = error?.response?.data?.error || \"Failed to assign request. Please try again.\";\n        \n        // Only show alert if it's a real assignment error, not a refresh error\n        if (error?.response?.status === 400 && errorMessage.includes(\"Request must be pending\")) {\n            alert(`Assignment failed: ${errorMessage}`);\n        } else {\n            console.log(\"Assignment may have succeeded, but refresh failed. Please refresh the page.\");\n        }\n    }\n  };\n\n  const handleAssignAI = async (requestId: string) => {\n    setAiLoading(requestId);\n    setAiError(null);\n    setAiAssignedId(null);\n    try {\n      const config = await getAuthHeader();\n      const res = await axios.put(\n        `${process.env.NEXT_PUBLIC_API_URL || 'http://localhost:4000'}/requests/${requestId}/assign-ai`,\n        {},\n        config\n      );\n      setAiAssignedId(requestId);\n      // Optionally, refresh data here\n      await fetchManagerData();\n    } catch (err: any) {\n      setAiError(err?.response?.data?.error || 'Failed to assign by AI');\n    } finally {\n      setAiLoading(null);\n    }\n  };\n\n  const handleBulkAssignAI = async () => {\n    setBulkLoading(true);\n    setBulkResult(null);\n    try {\n      const config = await getAuthHeader();\n      const res = await axios.put(\n        `${process.env.NEXT_PUBLIC_API_URL || 'http://localhost:4000'}/requests/assign-ai-bulk`,\n        {},\n        config\n      );\n      setBulkResult(res.data);\n      await fetchManagerData();\n    } catch (err: any) {\n      setBulkResult({ assignments: [], errors: [{ error: err?.response?.data?.error || 'Bulk AI assignment failed.' }] });\n    } finally {\n      setBulkLoading(false);\n    }\n  };\n\n  if (loading) {\n    return <div className=\"flex items-center justify-center h-screen\"><p>Loading Dashboard...</p></div>;\n  }\n\n  if (!profile) {\n    return <div className=\"flex items-center justify-center h-screen\"><p>Could not load profile data.</p></div>;\n  }\n  \n  return (\n    <div className=\"min-h-screen bg-gray-50 p-4 sm:p-6 lg:p-8\">\n      {apiError && <p className=\"text-center text-red-500 mb-4\">{apiError}</p>}\n      {profile.role === 'manager' && (\n          <ManagerDashboard\n              profile={profile}\n              allRequests={managerData.allRequests}\n              technicians={managerData.technicians}\n              onAssign={handleAssignRequest}\n              onAssignAI={handleAssignAI}\n              aiLoading={aiLoading}\n              aiError={aiError}\n              aiAssignedId={aiAssignedId}\n              onBulkAssignAI={handleBulkAssignAI}\n              bulkLoading={bulkLoading}\n              bulkResult={bulkResult}\n          />\n      )}\n      {profile.role === 'technician' && (\n          <TechnicianDashboard profile={profile} requests={techRequests} onAccept={handleAcceptRequest} onClose={handleCloseRequest} fetchTechnicianData={fetchTechnicianData} />\n      )}\n      {profile.role === 'user' && (\n          <UserDashboard profile={profile} userRequests={userRequests} onSubmitRequest={handleSubmitUserRequest} />\n      )}\n      {!['manager','technician','user'].includes(profile.role) && (\n          <div className=\"text-center text-red-600 font-bold mt-8\">Unknown user role. Please contact support.</div>\n      )}\n    </div>\n  );\n}"],"names":[],"mappings":"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","debugId":null}}]
}