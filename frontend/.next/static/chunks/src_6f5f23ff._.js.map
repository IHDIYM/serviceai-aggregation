{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/ihdiym/Desktop/complaints_extraction/Services/frontend/src/components/MetricsDashboard.tsx"],"sourcesContent":["'use client';\n\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n\ninterface DashboardMetrics {\n  total_requests_today: number;\n  avg_assign_time_today: number;\n  avg_resolution_time_today: number;\n  requests_by_status: Record<string, number>;\n  top_technicians: Array<{ name: string; count: number }>;\n  hourly_distribution: Record<string, number>;\n}\n\ninterface MetricsDashboardProps {\n  user: any;\n}\n\nconst MetricsDashboard: React.FC<MetricsDashboardProps> = ({ user }) => {\n  const [metrics, setMetrics] = useState<DashboardMetrics | null>(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n\n  const getAuthHeader = async () => {\n    const token = await user.getIdToken();\n    return {\n      headers: {\n        'Authorization': `Bearer ${token}`,\n        'Content-Type': 'application/json'\n      }\n    };\n  };\n\n  const fetchMetrics = async () => {\n    try {\n      setLoading(true);\n      const config = await getAuthHeader();\n      const response = await axios.get('http://localhost:4000/metrics/dashboard', config);\n      setMetrics(response.data);\n      setError(null);\n    } catch (err: any) {\n      console.error('Failed to fetch metrics:', err);\n      setError(err.response?.data?.error || 'Failed to load metrics');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    if (user) {\n      fetchMetrics();\n      // Refresh metrics every 5 minutes\n      const interval = setInterval(fetchMetrics, 5 * 60 * 1000);\n      return () => clearInterval(interval);\n    }\n  }, [user]);\n\n  const formatTime = (seconds: number): string => {\n    if (seconds < 60) return `${Math.round(seconds)}s`;\n    if (seconds < 3600) return `${Math.round(seconds / 60)}m`;\n    return `${Math.round(seconds / 3600)}h ${Math.round((seconds % 3600) / 60)}m`;\n  };\n\n  const formatHour = (hour: string): string => {\n    const hourNum = parseInt(hour);\n    return `${hourNum}:00`;\n  };\n\n  if (loading) {\n    return (\n      <div className=\"flex justify-center items-center h-64\">\n        <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-blue-600\"></div>\n      </div>\n    );\n  }\n\n  if (error) {\n    return (\n      <div className=\"bg-red-50 border border-red-200 rounded-lg p-4\">\n        <p className=\"text-red-800\">Error: {error}</p>\n        <button \n          onClick={fetchMetrics}\n          className=\"mt-2 px-4 py-2 bg-red-600 text-white rounded hover:bg-red-700\"\n        >\n          Retry\n        </button>\n      </div>\n    );\n  }\n\n  if (!metrics) {\n    return <div>No metrics available</div>;\n  }\n\n  return (\n    <div className=\"space-y-6\">\n      <div className=\"flex justify-between items-center\">\n        <h2 className=\"text-2xl font-bold text-gray-900\">Service Metrics Dashboard</h2>\n        <button \n          onClick={fetchMetrics}\n          className=\"px-4 py-2 bg-blue-600 text-white rounded hover:bg-blue-700\"\n        >\n          Refresh\n        </button>\n      </div>\n\n      {/* Key Metrics Cards */}\n      <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6\">\n        <div className=\"bg-white p-6 rounded-lg shadow-md\">\n          <h3 className=\"text-lg font-semibold text-gray-700 mb-2\">Total Requests Today</h3>\n          <p className=\"text-3xl font-bold text-blue-600\">{metrics.total_requests_today}</p>\n        </div>\n        \n        <div className=\"bg-white p-6 rounded-lg shadow-md\">\n          <h3 className=\"text-lg font-semibold text-gray-700 mb-2\">Avg Assignment Time</h3>\n          <p className=\"text-3xl font-bold text-green-600\">\n            {formatTime(metrics.avg_assign_time_today)}\n          </p>\n        </div>\n        \n        <div className=\"bg-white p-6 rounded-lg shadow-md\">\n          <h3 className=\"text-lg font-semibold text-gray-700 mb-2\">Avg Resolution Time</h3>\n          <p className=\"text-3xl font-bold text-purple-600\">\n            {formatTime(metrics.avg_resolution_time_today)}\n          </p>\n        </div>\n      </div>\n\n      {/* Status Distribution */}\n      <div className=\"bg-white p-6 rounded-lg shadow-md\">\n        <h3 className=\"text-xl font-semibold text-gray-900 mb-4\">Requests by Status</h3>\n        <div className=\"grid grid-cols-2 md:grid-cols-4 gap-4\">\n          {Object.entries(metrics.requests_by_status).map(([status, count]) => (\n            <div key={status} className=\"text-center\">\n              <div className={`text-2xl font-bold ${\n                status === 'pending' ? 'text-yellow-600' :\n                status === 'active' ? 'text-blue-600' :\n                status === 'closed' ? 'text-green-600' : 'text-gray-600'\n              }`}>\n                {count}\n              </div>\n              <div className=\"text-sm text-gray-600 capitalize\">{status}</div>\n            </div>\n          ))}\n        </div>\n      </div>\n\n      {/* Top Technicians */}\n      <div className=\"bg-white p-6 rounded-lg shadow-md\">\n        <h3 className=\"text-xl font-semibold text-gray-900 mb-4\">Top Performing Technicians</h3>\n        <div className=\"space-y-3\">\n          {metrics.top_technicians.map((tech, index) => (\n            <div key={tech.name} className=\"flex justify-between items-center p-3 bg-gray-50 rounded\">\n              <div className=\"flex items-center\">\n                <span className=\"text-lg font-semibold text-gray-600 mr-3\">#{index + 1}</span>\n                <span className=\"font-medium\">{tech.name}</span>\n              </div>\n              <span className=\"text-lg font-bold text-blue-600\">{tech.count} requests</span>\n            </div>\n          ))}\n        </div>\n      </div>\n\n      {/* Hourly Distribution */}\n      <div className=\"bg-white p-6 rounded-lg shadow-md\">\n        <h3 className=\"text-xl font-semibold text-gray-900 mb-4\">Hourly Request Distribution</h3>\n        <div className=\"grid grid-cols-6 md:grid-cols-12 gap-2\">\n          {Array.from({ length: 24 }, (_, i) => {\n            const hour = i.toString();\n            const count = metrics.hourly_distribution[hour] || 0;\n            return (\n              <div key={hour} className=\"text-center\">\n                <div className=\"text-xs text-gray-600 mb-1\">{formatHour(hour)}</div>\n                <div className=\"bg-blue-100 rounded p-1\">\n                  <div className=\"text-sm font-semibold text-blue-800\">{count}</div>\n                </div>\n              </div>\n            );\n          })}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default MetricsDashboard; "],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 442, "column": 0}, "map": {"version":3,"sources":["file:///Users/ihdiym/Desktop/complaints_extraction/Services/frontend/src/app/dashboard/page.tsx"],"sourcesContent":["\"use client\";\nimport { useEffect, useState } from 'react';\nimport { onAuthStateChanged } from 'firebase/auth';\nimport { auth } from '@/lib/firebase';\nimport { useRouter } from 'next/navigation';\nimport axios from \"axios\";\nimport MetricsDashboard from '@/components/MetricsDashboard';\n\n// --- Technician Components ---\nconst Timer = ({ startTime }: { startTime: string }) => {\n  const [elapsedTime, setElapsedTime] = useState('');\n  useEffect(() => {\n    const updateTimer = () => {\n      const start = new Date(startTime).getTime();\n      const now = new Date().getTime();\n      const difference = now - start;\n      const hours = Math.floor(difference / (1000 * 60 * 60));\n      const minutes = Math.floor((difference % (1000 * 60 * 60)) / (1000 * 60));\n      const seconds = Math.floor((difference % (1000 * 60)) / 1000);\n      setElapsedTime(`${hours.toString().padStart(2, '0')}:${minutes.toString().padStart(2, '0')}:${seconds.toString().padStart(2, '0')}`);\n    };\n    updateTimer();\n    const intervalId = setInterval(updateTimer, 1000);\n    return () => clearInterval(intervalId);\n  }, [startTime]);\n  return <span className=\"font-mono text-lg text-gray-800\">{elapsedTime}</span>;\n};\n\nconst TechnicianDashboard = ({ profile, requests, onAccept, onClose }: any) => (\n  <div className=\"max-w-7xl mx-auto space-y-8\">\n    {/* Profile Card */}\n    <div className=\"bg-white shadow-lg rounded-xl overflow-hidden\">\n        {/* ... same profile card UI as before ... */}\n    </div>\n    {/* Service Request Management */}\n    <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-8\">\n      {/* Incoming Requests */}\n      <div className=\"bg-white shadow-lg rounded-xl p-6\">\n        <h2 className=\"text-2xl font-bold text-gray-800 mb-4\">Incoming Requests</h2>\n        <div className=\"space-y-4\">\n          {requests.pending.length > 0 ? requests.pending.map((req: any) => (\n            <div key={req.id} className=\"p-4 border rounded-lg bg-gray-50\">\n              <p className=\"font-semibold\">{req.authorName || 'User'}</p>\n              <p className=\"text-gray-600 text-sm\">{new Date(req.createdAt.seconds * 1000).toLocaleString()}</p>\n              <p className=\"mt-2\">{req.requestDetails}</p>\n              <button onClick={() => onAccept(req.id)} className=\"mt-3 w-full bg-green-500 text-white font-bold py-2 px-4 rounded-lg hover:bg-green-600\">Accept</button>\n            </div>\n          )) : <p className=\"text-gray-500\">No pending requests.</p>}\n        </div>\n      </div>\n      {/* Active Services */}\n      <div className=\"bg-white shadow-lg rounded-xl p-6\">\n        <h2 className=\"text-2xl font-bold text-gray-800 mb-4\">Active Services</h2>\n        <div className=\"space-y-4\">\n          {requests.active.length > 0 ? requests.active.map((req: any) => (\n            <div key={req.id} className=\"p-4 border rounded-lg bg-yellow-50\">\n                <div className=\"flex justify-between items-center\">\n                <p className=\"font-semibold\">{req.authorName || 'User'}</p>\n                {req.acceptedAt && req.acceptedAt.seconds ? (\n                  <Timer startTime={new Date(req.acceptedAt.seconds * 1000).toISOString()} />\n                ) : (\n                  <span className=\"text-gray-500\">Not started</span>\n                )}\n              </div>\n              <p className=\"mt-2\">{req.requestDetails}</p>\n              <button onClick={() => onClose(req.id)} className=\"mt-3 w-full bg-red-500 text-white font-bold py-2 px-4 rounded-lg hover:bg-red-600\">Mark as Complete</button>\n            </div>\n          )) : <p className=\"text-gray-500\">No active services.</p>}\n        </div>\n      </div>\n      {/* Service History */}\n      <div className=\"bg-white shadow-lg rounded-xl p-6\">\n        <h2 className=\"text-2xl font-bold text-gray-800 mb-4\">Service History</h2>\n        <div className=\"space-y-4\">\n            {requests.closed.length > 0 ? requests.closed.map((req: any) => (\n            <div key={req.id} className=\"p-4 border rounded-lg bg-blue-50\">\n              <p className=\"font-semibold\">{req.authorName || 'User'}</p>\n              <p className=\"text-gray-600 text-sm\">\n                Closed: {\n                  req.closedAt\n                    ? req.closedAt.seconds\n                      ? new Date(req.closedAt.seconds * 1000).toLocaleString()\n                      : (typeof req.closedAt === 'string' || req.closedAt instanceof Date)\n                        ? new Date(req.closedAt).toLocaleString()\n                        : \"N/A\"\n                    : \"N/A\"\n                }\n              </p>\n              <p className=\"mt-2 text-gray-700\">{req.requestDetails}</p>\n            </div>\n          )) : <p className=\"text-gray-500\">No completed services.</p>}\n        </div>\n      </div>\n    </div>\n  </div>\n);\n\n\n// --- Manager Components ---\nconst ManagerDashboard = ({ profile, allRequests, technicians, onAssign }: any) => {\n    const [assignments, setAssignments] = useState<{ [key: string]: string }>({});\n\n    const activeTechnicianIds = new Set(\n        allRequests\n            .filter((req: any) => req.status === 'active')\n            .map((req: any) => req.technicianId)\n    );\n\n    const getStatusPill = (status: string) => {\n        switch (status) {\n            case 'pending': return <span className=\"px-2 py-1 text-xs font-semibold text-yellow-800 bg-yellow-200 rounded-full\">Pending</span>;\n            case 'active': return <span className=\"px-2 py-1 text-xs font-semibold text-green-800 bg-green-200 rounded-full\">Active</span>;\n            case 'closed': return <span className=\"px-2 py-1 text-xs font-semibold text-blue-800 bg-blue-200 rounded-full\">Closed</span>;\n            default: return <span className=\"px-2 py-1 text-xs font-semibold text-gray-800 bg-gray-200 rounded-full\">Unknown</span>;\n        }\n    };\n\n    return (\n        <div className=\"max-w-7xl mx-auto space-y-8\">\n            <div className=\"text-center\">\n                <h1 className=\"text-4xl font-bold\">Manager Dashboard</h1>\n                <p className=\"text-lg text-gray-600\">Welcome, {profile.firstName}!</p>\n            </div>\n\n            <div className=\"grid grid-cols-1 xl:grid-cols-5 gap-8\">\n                {/* Service Requests Overview */}\n                <div className=\"bg-white shadow-lg rounded-xl p-6 xl:col-span-3\">\n                    <h2 className=\"text-2xl font-bold text-gray-800 mb-4\">All Service Requests</h2>\n                    <div className=\"overflow-x-auto\">\n                        <table className=\"min-w-full divide-y divide-gray-200\">\n                            <thead className=\"bg-gray-50\">\n                                <tr>\n                                    <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Requester</th>\n                                    <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Details</th>\n                                    <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Technician</th>\n                                    <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Status</th>\n                                    <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Created At</th>\n                                    <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Actions</th>\n                                </tr>\n                            </thead>\n                            <tbody className=\"bg-white divide-y divide-gray-200\">\n                                {allRequests.map((req: any) => (\n                                    <tr key={req.id}>\n                                        <td className=\"px-6 py-4 whitespace-nowrap\">{req.authorName || 'N/A'}</td>\n                                        <td className=\"px-6 py-4 whitespace-nowrap\">{req.requestDetails}</td>\n                                        <td className=\"px-6 py-4 whitespace-nowrap\">{req.technicianName || 'Unassigned'}</td>\n                                        <td className=\"px-6 py-4 whitespace-nowrap\">{getStatusPill(req.status)}</td>\n                                        <td className=\"px-6 py-4 whitespace-nowrap\">{req.createdAt ? new Date(req.createdAt).toLocaleString() : \"N/A\"}</td>\n                                        <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium\">\n                                            {req.status === 'pending' && (\n                                                <div className=\"flex items-center space-x-2\">\n                                                    <select\n                                                        value={assignments[req.id] || ''}\n                                                        onChange={(e) => setAssignments({ ...assignments, [req.id]: e.target.value })}\n                                                        className=\"block w-full pl-3 pr-10 py-2 text-base border-gray-300 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm rounded-md\"\n                                                    >\n                                                        <option value=\"\" disabled>\n                                                            {technicians.filter((t: any) => !activeTechnicianIds.has(t.id)).length === 0\n                                                                ? \"No available technicians\"\n                                                                : \"Select Technician\"}\n                                                        </option>\n                                                        {technicians.filter((t: any) => !activeTechnicianIds.has(t.id)).map((tech: any) => (\n                                                            <option key={tech.id} value={tech.id}>{tech.firstName} {tech.lastName}</option>\n                                                        ))}\n                                                    </select>\n                                                    <button\n                                                        onClick={() => onAssign(req.id, assignments[req.id])}\n                                                        disabled={!assignments[req.id]}\n                                                        className=\"px-3 py-2 bg-blue-600 text-white font-semibold rounded-md shadow-sm hover:bg-blue-700 disabled:bg-gray-400\"\n                                                    >\n                                                        Assign\n                                                    </button>\n                                                </div>\n                                            )}\n                                        </td>\n                                    </tr>\n                                ))}\n                            </tbody>\n                        </table>\n                    </div>\n                </div>\n\n                {/* Technicians List */}\n                <div className=\"bg-white shadow-lg rounded-xl p-6 xl:col-span-2\">\n                    <h2 className=\"text-2xl font-bold text-gray-800 mb-4\">Technicians</h2>\n                    <div className=\"overflow-x-auto\">\n                        <table className=\"min-w-full divide-y divide-gray-200\">\n                            <thead className=\"bg-gray-50\">\n                                <tr>\n                                    <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Name</th>\n                                    <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Title</th>\n                                    <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Status</th>\n                                </tr>\n                            </thead>\n                            <tbody className=\"bg-white divide-y divide-gray-200\">\n                                {technicians.map((tech: any) => {\n                                    const isBusy = activeTechnicianIds.has(tech.id);\n                                    return (\n                                        <tr key={tech.id}>\n                                            <td className=\"px-6 py-4 whitespace-nowrap\">\n                                                <div className=\"text-sm font-medium text-gray-900\">{tech.firstName} {tech.lastName}</div>\n                                                <div className=\"text-sm text-gray-500\">{tech.email}</div>\n                                            </td>\n                                            <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-700\">{tech.title}</td>\n                                            <td className=\"px-6 py-4 whitespace-nowrap\">\n                                                {isBusy ? (\n                                                    <span className=\"px-2 py-1 text-xs font-semibold text-orange-800 bg-orange-200 rounded-full\">On a Job</span>\n                                                ) : (\n                                                    <span className=\"px-2 py-1 text-xs font-semibold text-green-800 bg-green-200 rounded-full\">Available</span>\n                                                )}\n                                            </td>\n                                        </tr>\n                                    );\n                                })}\n                            </tbody>\n                        </table>\n                    </div>\n                </div>\n            </div>\n\n            {/* Metrics Dashboard */}\n            <div className=\"bg-white shadow-lg rounded-xl p-6\">\n                <MetricsDashboard user={auth.currentUser} />\n            </div>\n        </div>\n    );\n};\n\nconst UserDashboard = ({ profile, userRequests, onSubmitRequest }: any) => {\n  const [requestDetails, setRequestDetails] = useState(\"\");\n  const [submitting, setSubmitting] = useState(false);\n  const [error, setError] = useState(\"\");\n  const [showForm, setShowForm] = useState(false);\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n    setError(\"\");\n    if (!requestDetails.trim()) {\n      setError(\"Please enter your service request details.\");\n      return;\n    }\n    setSubmitting(true);\n    await onSubmitRequest(requestDetails, setError);\n    setSubmitting(false);\n    setRequestDetails(\"\");\n    setShowForm(false);\n  };\n\n  return (\n    <div className=\"max-w-2xl mx-auto space-y-8\">\n      <div className=\"bg-white shadow-lg rounded-xl p-6\">\n        <div className=\"flex justify-between items-center mb-4\">\n          <h1 className=\"text-2xl font-bold\">Welcome, {profile.firstName}!</h1>\n          <button\n            className=\"bg-blue-600 text-white font-bold py-2 px-4 rounded-lg hover:bg-blue-700 transition-colors\"\n            onClick={() => setShowForm(true)}\n          >\n            Add Service\n          </button>\n        </div>\n        {showForm && (\n          <div className=\"fixed inset-0 flex items-center justify-center z-50 bg-black bg-opacity-30\">\n            <div className=\"bg-white rounded-lg shadow-xl p-6 w-full max-w-md relative\">\n              <button\n                className=\"absolute top-2 right-2 text-gray-400 hover:text-gray-700 text-xl font-bold\"\n                onClick={() => { setShowForm(false); setError(\"\"); }}\n                aria-label=\"Close\"\n              >\n                ×\n              </button>\n              <h2 className=\"text-xl font-bold mb-2\">New Service Request</h2>\n              <form onSubmit={handleSubmit} className=\"space-y-4\">\n                <textarea\n                  className=\"w-full border border-gray-300 rounded-lg p-3 focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                  rows={3}\n                  placeholder=\"Describe your issue or service needed...\"\n                  value={requestDetails}\n                  onChange={e => setRequestDetails(e.target.value)}\n                  disabled={submitting}\n                  autoFocus\n                />\n                {error && <p className=\"text-red-500 text-sm\">{error}</p>}\n                <div className=\"flex justify-end space-x-2\">\n                  <button\n                    type=\"button\"\n                    className=\"bg-gray-200 text-gray-700 font-bold py-2 px-4 rounded-lg hover:bg-gray-300\"\n                    onClick={() => { setShowForm(false); setError(\"\"); }}\n                  >\n                    Cancel\n                  </button>\n                  <button\n                    type=\"submit\"\n                    className=\"bg-blue-600 text-white font-bold py-2 px-6 rounded-lg hover:bg-blue-700 transition-colors\"\n                    disabled={submitting}\n                  >\n                    {submitting ? \"Submitting...\" : \"Submit\"}\n                  </button>\n                </div>\n              </form>\n            </div>\n          </div>\n        )}\n      </div>\n      <div className=\"bg-white shadow-lg rounded-xl p-6\">\n        <h2 className=\"text-xl font-bold mb-4\">Your Service Requests</h2>\n        {userRequests.length === 0 ? (\n          <p className=\"text-gray-500\">No requests yet.</p>\n        ) : (\n          <ul className=\"divide-y divide-gray-200\">\n            {userRequests.map((req: any) => (\n              <li key={req.id} className=\"py-4\">\n                <div className=\"flex justify-between items-center\">\n                  <div>\n                    <p className=\"font-semibold\">{req.requestDetails}</p>\n                    <p className=\"text-xs text-gray-500\">Submitted: {req.createdAt ? new Date(req.createdAt).toLocaleString() : \"N/A\"}</p>\n                  </div>\n                  <span className={\n                    req.status === 'pending' ? 'px-3 py-1 rounded-full bg-yellow-100 text-yellow-800 text-xs font-semibold' :\n                    req.status === 'active' ? 'px-3 py-1 rounded-full bg-green-100 text-green-800 text-xs font-semibold' :\n                    req.status === 'closed' ? 'px-3 py-1 rounded-full bg-blue-100 text-blue-800 text-xs font-semibold' :\n                    'px-3 py-1 rounded-full bg-gray-100 text-gray-800 text-xs font-semibold'\n                  }>\n                    {req.status.charAt(0).toUpperCase() + req.status.slice(1)}\n                  </span>\n                </div>\n                {req.technicianName && (\n                  <p className=\"text-xs text-gray-600 mt-1\">Assigned to: {req.technicianName}</p>\n                )}\n              </li>\n            ))}\n          </ul>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default function DashboardPage() {\n  const router = useRouter();\n  const [profile, setProfile] = useState<any>(null);\n  const [loading, setLoading] = useState(true);\n  const [techRequests, setTechRequests] = useState({ pending: [], active: [], closed: [] });\n  const [managerData, setManagerData] = useState({ allRequests: [], technicians: [] });\n  const [apiError, setApiError] = useState<string | null>(null);\n  const [userRequests, setUserRequests] = useState<any[]>([]);\n\n  const getAuthHeader = async () => {\n    const user = auth.currentUser;\n    if (!user) return {};\n    const idToken = await user.getIdToken();\n    return { headers: { Authorization: `Bearer ${idToken}` } };\n  };\n  \n  const fetchTechnicianData = async () => {\n      const config = await getAuthHeader();\n      if (!config.headers) return;\n\n      const [pendingRes, activeRes, closedRes] = await Promise.all([\n        axios.get(\"http://localhost:4000/requests/pending\", config),\n        axios.get(\"http://localhost:4000/requests/active\", config),\n        axios.get(\"http://localhost:4000/requests/closed\", config)\n      ]);\n      \n      setTechRequests({ pending: pendingRes.data, active: activeRes.data, closed: closedRes.data });\n  };\n  \n  const fetchManagerData = async () => {\n      const config = await getAuthHeader();\n      if (!config.headers) return;\n\n      const [requestsRes, techsRes] = await Promise.all([\n          axios.get(\"http://localhost:4000/requests/all\", config),\n          axios.get(\"http://localhost:4000/users/technicians\", config)\n      ]);\n\n      setManagerData({ allRequests: requestsRes.data, technicians: techsRes.data });\n  };\n  \n  const fetchUserRequests = async () => {\n    const config = await getAuthHeader();\n    if (!config.headers) return;\n    try {\n      const res = await axios.get(\"http://localhost:4000/requests/mine\", config);\n      setUserRequests(res.data);\n    } catch (err) {\n      setApiError(\"Could not load your service requests.\");\n    }\n  };\n\n  const handleSubmitUserRequest = async (details: string, setError: (msg: string) => void) => {\n    try {\n      const config = await getAuthHeader();\n      await axios.post(\"http://localhost:4000/requests\", { requestDetails: details }, config);\n      await fetchUserRequests();\n    } catch (error: any) {\n      setError(error?.response?.data?.error || \"Failed to submit request.\");\n    }\n  };\n\n  useEffect(() => {\n    const unsubscribe = onAuthStateChanged(auth, async (user) => {\n      if (user) {\n        try {\n          const idToken = await user.getIdToken();\n          const res = await axios.post(\"http://localhost:4000/login\", { idToken });\n          const userProfile = res.data;\n          setProfile(userProfile);\n\n          if (userProfile.role === 'manager') {\n            await fetchManagerData();\n          } else if (userProfile.role === 'technician') {\n            await fetchTechnicianData();\n          } else if (userProfile.role === 'user') {\n            await fetchUserRequests();\n          }\n          setApiError(null);\n        } catch (err) {\n          setProfile(null);\n          setApiError(\"Failed to load dashboard data.\");\n        } finally {\n          setLoading(false);\n        }\n      } else {\n        router.push('/login');\n      }\n    });\n    return () => unsubscribe();\n  }, [router]);\n\n  const handleAcceptRequest = async (requestId: string) => {\n    try {\n      const config = await getAuthHeader();\n      await axios.put(`http://localhost:4000/requests/${requestId}/accept`, {}, config);\n      await fetchTechnicianData();\n    } catch (error) {\n      console.error(\"Failed to accept request:\", error);\n    }\n  };\n  \n  const handleCloseRequest = async (requestId: string) => {\n    try {\n      const config = await getAuthHeader();\n      await axios.put(`http://localhost:4000/requests/${requestId}/close`, {}, config);\n      await fetchTechnicianData();\n    } catch (error) {\n      console.error(\"Failed to close request:\", error);\n    }\n  };\n\n  const handleAssignRequest = async (requestId: string, technicianId: string) => {\n    if (!technicianId) {\n        alert(\"Please select a technician to assign.\");\n        return;\n    }\n    try {\n        const config = await getAuthHeader();\n        const response = await axios.put(`http://localhost:4000/requests/${requestId}/assign`, { technicianId }, config);\n        console.log(\"Assignment successful:\", response.data);\n        \n        // Add a small delay before refreshing data to avoid race conditions\n        setTimeout(async () => {\n            try {\n                await fetchManagerData(); // Re-fetch manager data to update UI\n            } catch (refreshError) {\n                console.error(\"Error refreshing data after assignment:\", refreshError);\n            }\n        }, 500);\n        \n    } catch (error: any) {\n        console.error(\"Failed to assign request:\", error);\n        const errorMessage = error?.response?.data?.error || \"Failed to assign request. Please try again.\";\n        \n        // Only show alert if it's a real assignment error, not a refresh error\n        if (error?.response?.status === 400 && errorMessage.includes(\"Request must be pending\")) {\n            alert(`Assignment failed: ${errorMessage}`);\n        } else {\n            console.log(\"Assignment may have succeeded, but refresh failed. Please refresh the page.\");\n        }\n    }\n  };\n\n  if (loading) {\n    return <div className=\"flex items-center justify-center h-screen\"><p>Loading Dashboard...</p></div>;\n  }\n\n  if (!profile) {\n    return <div className=\"flex items-center justify-center h-screen\"><p>Could not load profile data.</p></div>;\n  }\n  \n  return (\n    <div className=\"min-h-screen bg-gray-50 p-4 sm:p-6 lg:p-8\">\n        {apiError && <p className=\"text-center text-red-500 mb-4\">{apiError}</p>}\n        {profile.role === 'manager' && (\n            <ManagerDashboard profile={profile} allRequests={managerData.allRequests} technicians={managerData.technicians} onAssign={handleAssignRequest} />\n        )}\n        {profile.role === 'technician' && (\n            <TechnicianDashboard profile={profile} requests={techRequests} onAccept={handleAcceptRequest} onClose={handleCloseRequest} />\n        )}\n        {profile.role === 'user' && (\n            <UserDashboard profile={profile} userRequests={userRequests} onSubmitRequest={handleSubmitUserRequest} />\n        )}\n        {!['manager','technician','user'].includes(profile.role) && (\n            <div className=\"text-center text-red-600 font-bold mt-8\">Unknown user role. Please contact support.</div>\n        )}\n    </div>\n  );\n}"],"names":[],"mappings":"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","debugId":null}}]
}