{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 31, "column": 0}, "map": {"version":3,"sources":["file:///S:/ServicesDataAgriggation/serviceai-aggregation/frontend/src/components/MetricsDashboard.tsx"],"sourcesContent":["'use client';\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\ninterface DashboardMetrics {\r\n  total_requests_today: number;\r\n  avg_assign_time_today: number;\r\n  avg_resolution_time_today: number;\r\n  requests_by_status: Record<string, number>;\r\n  top_technicians: Array<{ name: string; count: number }>;\r\n  hourly_distribution: Record<string, number>;\r\n}\r\n\r\ninterface MetricsDashboardProps {\r\n  user: any;\r\n}\r\n\r\nconst MetricsDashboard: React.FC<MetricsDashboardProps> = ({ user }) => {\r\n  const [metrics, setMetrics] = useState<DashboardMetrics | null>(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState<string | null>(null);\r\n\r\n  const getAuthHeader = async () => {\r\n    const token = await user.getIdToken();\r\n    return {\r\n      headers: {\r\n        'Authorization': `Bearer ${token}`,\r\n        'Content-Type': 'application/json'\r\n      }\r\n    };\r\n  };\r\n\r\n  const fetchMetrics = async () => {\r\n    try {\r\n      setLoading(true);\r\n      const config = await getAuthHeader();\r\n      const response = await axios.get('http://localhost:4000/metrics/dashboard', config);\r\n      setMetrics(response.data);\r\n      setError(null);\r\n    } catch (err: any) {\r\n      console.error('Failed to fetch metrics:', err);\r\n      setError(err.response?.data?.error || 'Failed to load metrics');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (user) {\r\n      fetchMetrics();\r\n      // Refresh metrics every 5 minutes\r\n      const interval = setInterval(fetchMetrics, 5 * 60 * 1000);\r\n      return () => clearInterval(interval);\r\n    }\r\n  }, [user]);\r\n\r\n  const formatTime = (seconds: number): string => {\r\n    if (seconds < 60) return `${Math.round(seconds)}s`;\r\n    if (seconds < 3600) return `${Math.round(seconds / 60)}m`;\r\n    return `${Math.round(seconds / 3600)}h ${Math.round((seconds % 3600) / 60)}m`;\r\n  };\r\n\r\n  const formatHour = (hour: string): string => {\r\n    const hourNum = parseInt(hour);\r\n    return `${hourNum}:00`;\r\n  };\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"flex justify-center items-center h-64\">\r\n        <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-blue-600\"></div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (error) {\r\n    return (\r\n      <div className=\"bg-red-50 border border-red-200 rounded-lg p-4\">\r\n        <p className=\"text-red-800\">Error: {error}</p>\r\n        <button \r\n          onClick={fetchMetrics}\r\n          className=\"mt-2 px-4 py-2 bg-red-600 text-white rounded hover:bg-red-700\"\r\n        >\r\n          Retry\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (!metrics) {\r\n    return <div>No metrics available</div>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"space-y-6\">\r\n      <div className=\"flex justify-between items-center\">\r\n        <h2 className=\"text-2xl font-bold text-gray-900\">Service Metrics Dashboard</h2>\r\n        <button \r\n          onClick={fetchMetrics}\r\n          className=\"px-4 py-2 bg-blue-600 text-white rounded hover:bg-blue-700\"\r\n        >\r\n          Refresh\r\n        </button>\r\n      </div>\r\n\r\n      {/* Key Metrics Cards */}\r\n      <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6\">\r\n        <div className=\"bg-white p-6 rounded-lg shadow-md\">\r\n          <h3 className=\"text-lg font-semibold text-gray-700 mb-2\">Total Requests Today</h3>\r\n          <p className=\"text-3xl font-bold text-blue-600\">{metrics.total_requests_today}</p>\r\n        </div>\r\n        \r\n        <div className=\"bg-white p-6 rounded-lg shadow-md\">\r\n          <h3 className=\"text-lg font-semibold text-gray-700 mb-2\">Avg Assignment Time</h3>\r\n          <p className=\"text-3xl font-bold text-green-600\">\r\n            {formatTime(metrics.avg_assign_time_today)}\r\n          </p>\r\n        </div>\r\n        \r\n        <div className=\"bg-white p-6 rounded-lg shadow-md\">\r\n          <h3 className=\"text-lg font-semibold text-gray-700 mb-2\">Avg Resolution Time</h3>\r\n          <p className=\"text-3xl font-bold text-purple-600\">\r\n            {formatTime(metrics.avg_resolution_time_today)}\r\n          </p>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Status Distribution */}\r\n      <div className=\"bg-white p-6 rounded-lg shadow-md\">\r\n        <h3 className=\"text-xl font-semibold text-gray-900 mb-4\">Requests by Status</h3>\r\n        <div className=\"grid grid-cols-2 md:grid-cols-4 gap-4\">\r\n          {Object.entries(metrics.requests_by_status).map(([status, count]) => (\r\n            <div key={status} className=\"text-center\">\r\n              <div className={`text-2xl font-bold ${\r\n                status === 'pending' ? 'text-yellow-600' :\r\n                status === 'active' ? 'text-blue-600' :\r\n                status === 'closed' ? 'text-green-600' : 'text-gray-600'\r\n              }`}>\r\n                {count}\r\n              </div>\r\n              <div className=\"text-sm text-gray-600 capitalize\">{status}</div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n\r\n      {/* Top Technicians */}\r\n      <div className=\"bg-white p-6 rounded-lg shadow-md\">\r\n        <h3 className=\"text-xl font-semibold text-gray-900 mb-4\">Top Performing Technicians</h3>\r\n        <div className=\"space-y-3\">\r\n          {metrics.top_technicians.map((tech, index) => (\r\n            <div key={tech.name} className=\"flex justify-between items-center p-3 bg-gray-50 rounded\">\r\n              <div className=\"flex items-center\">\r\n                <span className=\"text-lg font-semibold text-gray-600 mr-3\">#{index + 1}</span>\r\n                <span className=\"font-medium\">{tech.name}</span>\r\n              </div>\r\n              <span className=\"text-lg font-bold text-blue-600\">{tech.count} requests</span>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n\r\n      {/* Hourly Distribution */}\r\n      <div className=\"bg-white p-6 rounded-lg shadow-md\">\r\n        <h3 className=\"text-xl font-semibold text-gray-900 mb-4\">Hourly Request Distribution</h3>\r\n        <div className=\"grid grid-cols-6 md:grid-cols-12 gap-2\">\r\n          {Array.from({ length: 24 }, (_, i) => {\r\n            const hour = i.toString();\r\n            const count = metrics.hourly_distribution[hour] || 0;\r\n            return (\r\n              <div key={hour} className=\"text-center\">\r\n                <div className=\"text-xs text-gray-600 mb-1\">{formatHour(hour)}</div>\r\n                <div className=\"bg-blue-100 rounded p-1\">\r\n                  <div className=\"text-sm font-semibold text-blue-800\">{count}</div>\r\n                </div>\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MetricsDashboard; "],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 453, "column": 0}, "map": {"version":3,"sources":["file:///S:/ServicesDataAgriggation/serviceai-aggregation/frontend/src/app/dashboard/page.tsx"],"sourcesContent":["\"use client\";\r\nimport { useEffect, useState } from 'react';\r\nimport { onAuthStateChanged } from 'firebase/auth';\r\nimport { auth } from '@/lib/firebase';\r\nimport { useRouter } from 'next/navigation';\r\nimport axios from \"axios\";\r\nimport MetricsDashboard from '@/components/MetricsDashboard';\r\n\r\n// --- Technician Components ---\r\nconst Timer = ({ startTime }: { startTime: string }) => {\r\n  const [elapsedTime, setElapsedTime] = useState('');\r\n  useEffect(() => {\r\n    const updateTimer = () => {\r\n      const start = new Date(startTime).getTime();\r\n      const now = new Date().getTime();\r\n      const difference = now - start;\r\n      const hours = Math.floor(difference / (1000 * 60 * 60));\r\n      const minutes = Math.floor((difference % (1000 * 60 * 60)) / (1000 * 60));\r\n      const seconds = Math.floor((difference % (1000 * 60)) / 1000);\r\n      setElapsedTime(`${hours.toString().padStart(2, '0')}:${minutes.toString().padStart(2, '0')}:${seconds.toString().padStart(2, '0')}`);\r\n    };\r\n    updateTimer();\r\n    const intervalId = setInterval(updateTimer, 1000);\r\n    return () => clearInterval(intervalId);\r\n  }, [startTime]);\r\n  return <span className=\"font-mono text-lg text-gray-800\">{elapsedTime}</span>;\r\n};\r\n\r\nconst TechnicianDashboard = ({ profile, requests, onAccept, onClose }: any) => (\r\n  <div className=\"max-w-7xl mx-auto space-y-8\">\r\n    {/* Profile Card */}\r\n    <div className=\"bg-white shadow-lg rounded-xl overflow-hidden\">\r\n        {/* ... same profile card UI as before ... */}\r\n    </div>\r\n    {/* Service Request Management */}\r\n    <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-8\">\r\n      {/* Incoming Requests */}\r\n      <div className=\"bg-white shadow-lg rounded-xl p-6\">\r\n        <h2 className=\"text-2xl font-bold text-gray-800 mb-4\">Incoming Requests</h2>\r\n        <div className=\"space-y-4\">\r\n          {requests.pending.length > 0 ? requests.pending.map((req: any) => (\r\n            <div key={req.id} className=\"p-4 border rounded-lg bg-gray-50\">\r\n              <p className=\"font-semibold\">{req.authorName || 'User'}</p>\r\n              <p className=\"text-gray-600 text-sm\">{new Date(req.createdAt.seconds * 1000).toLocaleString()}</p>\r\n              <p className=\"mt-2\">{req.requestDetails}</p>\r\n              <button onClick={() => onAccept(req.id)} className=\"mt-3 w-full bg-green-500 text-white font-bold py-2 px-4 rounded-lg hover:bg-green-600\">Accept</button>\r\n            </div>\r\n          )) : <p className=\"text-gray-500\">No pending requests.</p>}\r\n        </div>\r\n      </div>\r\n      {/* Active Services */}\r\n      <div className=\"bg-white shadow-lg rounded-xl p-6\">\r\n        <h2 className=\"text-2xl font-bold text-gray-800 mb-4\">Active Services</h2>\r\n        <div className=\"space-y-4\">\r\n          {requests.active.length > 0 ? requests.active.map((req: any) => (\r\n            <div key={req.id} className=\"p-4 border rounded-lg bg-yellow-50\">\r\n                <div className=\"flex justify-between items-center\">\r\n                <p className=\"font-semibold\">{req.authorName || 'User'}</p>\r\n                {req.acceptedAt && req.acceptedAt.seconds ? (\r\n                  <Timer startTime={new Date(req.acceptedAt.seconds * 1000).toISOString()} />\r\n                ) : (\r\n                  <span className=\"text-gray-500\">Not started</span>\r\n                )}\r\n              </div>\r\n              <p className=\"mt-2\">{req.requestDetails}</p>\r\n              <button onClick={() => onClose(req.id)} className=\"mt-3 w-full bg-red-500 text-white font-bold py-2 px-4 rounded-lg hover:bg-red-600\">Mark as Complete</button>\r\n            </div>\r\n          )) : <p className=\"text-gray-500\">No active services.</p>}\r\n        </div>\r\n      </div>\r\n      {/* Service History */}\r\n      <div className=\"bg-white shadow-lg rounded-xl p-6\">\r\n        <h2 className=\"text-2xl font-bold text-gray-800 mb-4\">Service History</h2>\r\n        <div className=\"space-y-4\">\r\n            {requests.closed.length > 0 ? requests.closed.map((req: any) => (\r\n            <div key={req.id} className=\"p-4 border rounded-lg bg-blue-50\">\r\n              <p className=\"font-semibold\">{req.authorName || 'User'}</p>\r\n              <p className=\"text-gray-600 text-sm\">\r\n                Closed: {\r\n                  req.closedAt\r\n                    ? req.closedAt.seconds\r\n                      ? new Date(req.closedAt.seconds * 1000).toLocaleString()\r\n                      : (typeof req.closedAt === 'string' || req.closedAt instanceof Date)\r\n                        ? new Date(req.closedAt).toLocaleString()\r\n                        : \"N/A\"\r\n                    : \"N/A\"\r\n                }\r\n              </p>\r\n              <p className=\"mt-2 text-gray-700\">{req.requestDetails}</p>\r\n            </div>\r\n          )) : <p className=\"text-gray-500\">No completed services.</p>}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n);\r\n\r\n\r\n// --- Manager Components ---\r\nconst ManagerDashboard = ({ profile, allRequests, technicians, onAssign, onAssignAI, aiLoading, aiError, aiAssignedId, onBulkAssignAI, bulkLoading, bulkResult }: any) => {\r\n    const [assignments, setAssignments] = useState<{ [key: string]: string }>({});\r\n\r\n    const activeTechnicianIds = new Set(\r\n        allRequests\r\n            .filter((req: any) => req.status === 'active')\r\n            .map((req: any) => req.technicianId)\r\n    );\r\n\r\n    const getStatusPill = (status: string) => {\r\n        switch (status) {\r\n            case 'pending': return <span className=\"px-2 py-1 text-xs font-semibold text-yellow-800 bg-yellow-200 rounded-full\">Pending</span>;\r\n            case 'active': return <span className=\"px-2 py-1 text-xs font-semibold text-green-800 bg-green-200 rounded-full\">Active</span>;\r\n            case 'closed': return <span className=\"px-2 py-1 text-xs font-semibold text-blue-800 bg-blue-200 rounded-full\">Closed</span>;\r\n            default: return <span className=\"px-2 py-1 text-xs font-semibold text-gray-800 bg-gray-200 rounded-full\">Unknown</span>;\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"max-w-7xl mx-auto space-y-8\">\r\n            <div className=\"text-center\">\r\n                <h1 className=\"text-4xl font-bold\">Manager Dashboard</h1>\r\n                <p className=\"text-lg text-gray-600\">Welcome, {profile.firstName}!</p>\r\n            </div>\r\n\r\n            <div className=\"mb-4 flex justify-end\">\r\n                <button\r\n                    onClick={onBulkAssignAI}\r\n                    disabled={bulkLoading}\r\n                    className=\"px-4 py-2 bg-purple-700 text-white font-semibold rounded-md shadow-sm hover:bg-purple-800 disabled:bg-gray-400\"\r\n                >\r\n                    {bulkLoading ? 'Bulk Assigning by AI...' : 'Bulk Assign All by AI'}\r\n                </button>\r\n            </div>\r\n            {bulkResult && (\r\n                <div className=\"mb-4\">\r\n                    <div className=\"text-green-700 font-semibold\">Assigned: {bulkResult.assignments.length}</div>\r\n                    {bulkResult.errors.length > 0 && (\r\n                        <div className=\"text-red-600 text-sm\">Errors: {bulkResult.errors.map((e: any) => `Request ${e.requestId}: ${e.error}`).join(', ')}</div>\r\n                    )}\r\n                </div>\r\n            )}\r\n\r\n            <div className=\"grid grid-cols-1 xl:grid-cols-5 gap-8\">\r\n                {/* Service Requests Overview */}\r\n                <div className=\"bg-white shadow-lg rounded-xl p-6 xl:col-span-3\">\r\n                    <h2 className=\"text-2xl font-bold text-gray-800 mb-4\">All Service Requests</h2>\r\n                    <div className=\"overflow-x-auto\">\r\n                        <table className=\"min-w-full divide-y divide-gray-200\">\r\n                            <thead className=\"bg-gray-50\">\r\n                                <tr>\r\n                                    <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Requester</th>\r\n                                    <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Details</th>\r\n                                    <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Technician</th>\r\n                                    <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Status</th>\r\n                                    <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Created At</th>\r\n                                    <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Actions</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody className=\"bg-white divide-y divide-gray-200\">\r\n                                {allRequests.map((req: any) => (\r\n                                    <tr key={req.id}>\r\n                                        <td className=\"px-6 py-4 whitespace-nowrap\">{req.authorName || 'N/A'}</td>\r\n                                        <td className=\"px-6 py-4 whitespace-nowrap\">{req.requestDetails}</td>\r\n                                        <td className=\"px-6 py-4 whitespace-nowrap\">{req.technicianName || 'Unassigned'}</td>\r\n                                        <td className=\"px-6 py-4 whitespace-nowrap\">{getStatusPill(req.status)}</td>\r\n                                        <td className=\"px-6 py-4 whitespace-nowrap\">{req.createdAt ? new Date(req.createdAt).toLocaleString() : \"N/A\"}</td>\r\n                                        <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium\">\r\n                                            {req.status === 'pending' && (\r\n                                                <div className=\"flex flex-col space-y-2\">\r\n                                                    <div className=\"flex items-center space-x-2\">\r\n                                                        <select\r\n                                                            value={assignments[req.id] || ''}\r\n                                                            onChange={(e) => setAssignments({ ...assignments, [req.id]: e.target.value })}\r\n                                                            className=\"block w-full pl-3 pr-10 py-2 text-base border-gray-300 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm rounded-md\"\r\n                                                        >\r\n                                                            <option value=\"\" disabled>\r\n                                                                {technicians.filter((t: any) => !activeTechnicianIds.has(t.id)).length === 0\r\n                                                                    ? \"No available technicians\"\r\n                                                                    : \"Select Technician\"}\r\n                                                            </option>\r\n                                                            {technicians.filter((t: any) => !activeTechnicianIds.has(t.id)).map((tech: any) => (\r\n                                                                <option key={tech.id} value={tech.id}>{tech.firstName} {tech.lastName}</option>\r\n                                                            ))}\r\n                                                        </select>\r\n                                                        <button\r\n                                                            onClick={() => onAssign(req.id, assignments[req.id])}\r\n                                                            disabled={!assignments[req.id]}\r\n                                                            className=\"px-3 py-2 bg-blue-600 text-white font-semibold rounded-md shadow-sm hover:bg-blue-700 disabled:bg-gray-400\"\r\n                                                        >\r\n                                                            Assign\r\n                                                        </button>\r\n                                                    </div>\r\n                                                    <button\r\n                                                        onClick={() => onAssignAI(req.id)}\r\n                                                        disabled={aiLoading === req.id}\r\n                                                        className=\"px-3 py-2 bg-purple-600 text-white font-semibold rounded-md shadow-sm hover:bg-purple-700 disabled:bg-gray-400 mt-1\"\r\n                                                    >\r\n                                                        {aiLoading === req.id ? 'Assigning by AI...' : 'Assign Technician by AI'}\r\n                                                    </button>\r\n                                                    {aiError && aiLoading === req.id && (\r\n                                                        <span className=\"text-red-500 text-xs\">{aiError}</span>\r\n                                                    )}\r\n                                                    {aiAssignedId === req.id && (\r\n                                                        <span className=\"text-green-600 text-xs\">Assigned by AI!</span>\r\n                                                    )}\r\n                                                </div>\r\n                                            )}\r\n                                        </td>\r\n                                    </tr>\r\n                                ))}\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                </div>\r\n\r\n                {/* Technicians List */}\r\n                <div className=\"bg-white shadow-lg rounded-xl p-6 xl:col-span-2\">\r\n                    <h2 className=\"text-2xl font-bold text-gray-800 mb-4\">Technicians</h2>\r\n                    <div className=\"overflow-x-auto\">\r\n                        <table className=\"min-w-full divide-y divide-gray-200\">\r\n                            <thead className=\"bg-gray-50\">\r\n                                <tr>\r\n                                    <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Name</th>\r\n                                    <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Title</th>\r\n                                    <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Status</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody className=\"bg-white divide-y divide-gray-200\">\r\n                                {technicians.map((tech: any) => {\r\n                                    const isBusy = activeTechnicianIds.has(tech.id);\r\n                                    return (\r\n                                        <tr key={tech.id}>\r\n                                            <td className=\"px-6 py-4 whitespace-nowrap\">\r\n                                                <div className=\"text-sm font-medium text-gray-900\">{tech.firstName} {tech.lastName}</div>\r\n                                                <div className=\"text-sm text-gray-500\">{tech.email}</div>\r\n                                            </td>\r\n                                            <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-700\">{tech.title}</td>\r\n                                            <td className=\"px-6 py-4 whitespace-nowrap\">\r\n                                                {isBusy ? (\r\n                                                    <span className=\"px-2 py-1 text-xs font-semibold text-orange-800 bg-orange-200 rounded-full\">On a Job</span>\r\n                                                ) : (\r\n                                                    <span className=\"px-2 py-1 text-xs font-semibold text-green-800 bg-green-200 rounded-full\">Available</span>\r\n                                                )}\r\n                                            </td>\r\n                                        </tr>\r\n                                    );\r\n                                })}\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            {/* Metrics Dashboard */}\r\n            <div className=\"bg-white shadow-lg rounded-xl p-6\">\r\n                <MetricsDashboard user={auth.currentUser} />\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst UserDashboard = ({ profile, userRequests, onSubmitRequest }: any) => {\r\n  const [requestDetails, setRequestDetails] = useState(\"\");\r\n  const [submitting, setSubmitting] = useState(false);\r\n  const [error, setError] = useState(\"\");\r\n  const [showForm, setShowForm] = useState(false);\r\n\r\n  const handleSubmit = async (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    setError(\"\");\r\n    if (!requestDetails.trim()) {\r\n      setError(\"Please enter your service request details.\");\r\n      return;\r\n    }\r\n    setSubmitting(true);\r\n    await onSubmitRequest(requestDetails, setError);\r\n    setSubmitting(false);\r\n    setRequestDetails(\"\");\r\n    setShowForm(false);\r\n  };\r\n\r\n  return (\r\n    <div className=\"max-w-2xl mx-auto space-y-8\">\r\n      <div className=\"bg-white shadow-lg rounded-xl p-6\">\r\n        <div className=\"flex justify-between items-center mb-4\">\r\n          <h1 className=\"text-2xl font-bold\">Welcome, {profile.firstName}!</h1>\r\n          <button\r\n            className=\"bg-blue-600 text-white font-bold py-2 px-4 rounded-lg hover:bg-blue-700 transition-colors\"\r\n            onClick={() => setShowForm(true)}\r\n          >\r\n            Add Service\r\n          </button>\r\n        </div>\r\n        {showForm && (\r\n          <div className=\"fixed inset-0 flex items-center justify-center z-50 bg-black bg-opacity-30\">\r\n            <div className=\"bg-white rounded-lg shadow-xl p-6 w-full max-w-md relative\">\r\n              <button\r\n                className=\"absolute top-2 right-2 text-gray-400 hover:text-gray-700 text-xl font-bold\"\r\n                onClick={() => { setShowForm(false); setError(\"\"); }}\r\n                aria-label=\"Close\"\r\n              >\r\n                ×\r\n              </button>\r\n              <h2 className=\"text-xl font-bold mb-2\">New Service Request</h2>\r\n              <form onSubmit={handleSubmit} className=\"space-y-4\">\r\n                <textarea\r\n                  className=\"w-full border border-gray-300 rounded-lg p-3 focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n                  rows={3}\r\n                  placeholder=\"Describe your issue or service needed...\"\r\n                  value={requestDetails}\r\n                  onChange={e => setRequestDetails(e.target.value)}\r\n                  disabled={submitting}\r\n                  autoFocus\r\n                />\r\n                {error && <p className=\"text-red-500 text-sm\">{error}</p>}\r\n                <div className=\"flex justify-end space-x-2\">\r\n                  <button\r\n                    type=\"button\"\r\n                    className=\"bg-gray-200 text-gray-700 font-bold py-2 px-4 rounded-lg hover:bg-gray-300\"\r\n                    onClick={() => { setShowForm(false); setError(\"\"); }}\r\n                  >\r\n                    Cancel\r\n                  </button>\r\n                  <button\r\n                    type=\"submit\"\r\n                    className=\"bg-blue-600 text-white font-bold py-2 px-6 rounded-lg hover:bg-blue-700 transition-colors\"\r\n                    disabled={submitting}\r\n                  >\r\n                    {submitting ? \"Submitting...\" : \"Submit\"}\r\n                  </button>\r\n                </div>\r\n              </form>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n      <div className=\"bg-white shadow-lg rounded-xl p-6\">\r\n        <h2 className=\"text-xl font-bold mb-4\">Your Service Requests</h2>\r\n        {userRequests.length === 0 ? (\r\n          <p className=\"text-gray-500\">No requests yet.</p>\r\n        ) : (\r\n          <ul className=\"divide-y divide-gray-200\">\r\n            {userRequests.map((req: any) => (\r\n              <li key={req.id} className=\"py-4\">\r\n                <div className=\"flex justify-between items-center\">\r\n                  <div>\r\n                    <p className=\"font-semibold\">{req.requestDetails}</p>\r\n                    <p className=\"text-xs text-gray-500\">Submitted: {req.createdAt ? new Date(req.createdAt).toLocaleString() : \"N/A\"}</p>\r\n                  </div>\r\n                  <span className={\r\n                    req.status === 'pending' ? 'px-3 py-1 rounded-full bg-yellow-100 text-yellow-800 text-xs font-semibold' :\r\n                    req.status === 'active' ? 'px-3 py-1 rounded-full bg-green-100 text-green-800 text-xs font-semibold' :\r\n                    req.status === 'closed' ? 'px-3 py-1 rounded-full bg-blue-100 text-blue-800 text-xs font-semibold' :\r\n                    'px-3 py-1 rounded-full bg-gray-100 text-gray-800 text-xs font-semibold'\r\n                  }>\r\n                    {req.status.charAt(0).toUpperCase() + req.status.slice(1)}\r\n                  </span>\r\n                </div>\r\n                {req.technicianName && (\r\n                  <p className=\"text-xs text-gray-600 mt-1\">Assigned to: {req.technicianName}</p>\r\n                )}\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default function DashboardPage() {\r\n  const router = useRouter();\r\n  const [profile, setProfile] = useState<any>(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [techRequests, setTechRequests] = useState({ pending: [], active: [], closed: [] });\r\n  const [managerData, setManagerData] = useState({ allRequests: [], technicians: [] });\r\n  const [apiError, setApiError] = useState<string | null>(null);\r\n  const [userRequests, setUserRequests] = useState<any[]>([]);\r\n  const [aiLoading, setAiLoading] = useState<string | null>(null);\r\n  const [aiError, setAiError] = useState<string | null>(null);\r\n  const [aiAssignedId, setAiAssignedId] = useState<string | null>(null);\r\n  const [bulkLoading, setBulkLoading] = useState(false);\r\n  const [bulkResult, setBulkResult] = useState<any>(null);\r\n\r\n  const getAuthHeader = async () => {\r\n    const user = auth.currentUser;\r\n    if (!user) return { headers: {} };\r\n    const idToken = await user.getIdToken();\r\n    return { headers: { Authorization: `Bearer ${idToken}` } };\r\n  };\r\n  \r\n  const fetchTechnicianData = async () => {\r\n      const config = await getAuthHeader();\r\n      if (!config.headers) return;\r\n\r\n      const [pendingRes, activeRes, closedRes] = await Promise.all([\r\n        axios.get(\"http://localhost:4000/requests/pending\", config),\r\n        axios.get(\"http://localhost:4000/requests/active\", config),\r\n        axios.get(\"http://localhost:4000/requests/closed\", config)\r\n      ]);\r\n      \r\n      setTechRequests({ pending: pendingRes.data, active: activeRes.data, closed: closedRes.data });\r\n  };\r\n  \r\n  const fetchManagerData = async () => {\r\n      const config = await getAuthHeader();\r\n      if (!config.headers) return;\r\n\r\n      const [requestsRes, techsRes] = await Promise.all([\r\n          axios.get(\"http://localhost:4000/requests/all\", config),\r\n          axios.get(\"http://localhost:4000/users/technicians\", config)\r\n      ]);\r\n\r\n      setManagerData({ allRequests: requestsRes.data, technicians: techsRes.data });\r\n  };\r\n  \r\n  const fetchUserRequests = async () => {\r\n    const config = await getAuthHeader();\r\n    if (!config.headers) return;\r\n    try {\r\n      const res = await axios.get(\"http://localhost:4000/requests/mine\", config);\r\n      setUserRequests(res.data);\r\n    } catch (err) {\r\n      setApiError(\"Could not load your service requests.\");\r\n    }\r\n  };\r\n\r\n  const handleSubmitUserRequest = async (details: string, setError: (msg: string) => void) => {\r\n    try {\r\n      const config = await getAuthHeader();\r\n      await axios.post(\"http://localhost:4000/requests\", { requestDetails: details }, config);\r\n      await fetchUserRequests();\r\n    } catch (error: any) {\r\n      setError(error?.response?.data?.error || \"Failed to submit request.\");\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const unsubscribe = onAuthStateChanged(auth, async (user) => {\r\n      if (user) {\r\n        try {\r\n          const idToken = await user.getIdToken();\r\n          const res = await axios.post(\"http://localhost:4000/login\", { idToken });\r\n          const userProfile = res.data;\r\n          setProfile(userProfile);\r\n\r\n          if (userProfile.role === 'manager') {\r\n            await fetchManagerData();\r\n          } else if (userProfile.role === 'technician') {\r\n            await fetchTechnicianData();\r\n          } else if (userProfile.role === 'user') {\r\n            await fetchUserRequests();\r\n          }\r\n          setApiError(null);\r\n        } catch (err) {\r\n          setProfile(null);\r\n          setApiError(\"Failed to load dashboard data.\");\r\n        } finally {\r\n          setLoading(false);\r\n        }\r\n      } else {\r\n        router.push('/login');\r\n      }\r\n    });\r\n    return () => unsubscribe();\r\n  }, [router]);\r\n\r\n  const handleAcceptRequest = async (requestId: string) => {\r\n    try {\r\n      const config = await getAuthHeader();\r\n      await axios.put(`http://localhost:4000/requests/${requestId}/accept`, {}, config);\r\n      await fetchTechnicianData();\r\n    } catch (error) {\r\n      console.error(\"Failed to accept request:\", error);\r\n    }\r\n  };\r\n  \r\n  const handleCloseRequest = async (requestId: string) => {\r\n    try {\r\n      const config = await getAuthHeader();\r\n      await axios.put(`http://localhost:4000/requests/${requestId}/close`, {}, config);\r\n      await fetchTechnicianData();\r\n    } catch (error) {\r\n      console.error(\"Failed to close request:\", error);\r\n    }\r\n  };\r\n\r\n  const handleAssignRequest = async (requestId: string, technicianId: string) => {\r\n    if (!technicianId) {\r\n        alert(\"Please select a technician to assign.\");\r\n        return;\r\n    }\r\n    try {\r\n        const config = await getAuthHeader();\r\n        const response = await axios.put(`http://localhost:4000/requests/${requestId}/assign`, { technicianId }, config);\r\n        console.log(\"Assignment successful:\", response.data);\r\n        \r\n        // Add a small delay before refreshing data to avoid race conditions\r\n        setTimeout(async () => {\r\n            try {\r\n                await fetchManagerData(); // Re-fetch manager data to update UI\r\n            } catch (refreshError) {\r\n                console.error(\"Error refreshing data after assignment:\", refreshError);\r\n            }\r\n        }, 500);\r\n        \r\n    } catch (error: any) {\r\n        console.error(\"Failed to assign request:\", error);\r\n        const errorMessage = error?.response?.data?.error || \"Failed to assign request. Please try again.\";\r\n        \r\n        // Only show alert if it's a real assignment error, not a refresh error\r\n        if (error?.response?.status === 400 && errorMessage.includes(\"Request must be pending\")) {\r\n            alert(`Assignment failed: ${errorMessage}`);\r\n        } else {\r\n            console.log(\"Assignment may have succeeded, but refresh failed. Please refresh the page.\");\r\n        }\r\n    }\r\n  };\r\n\r\n  const handleAssignAI = async (requestId: string) => {\r\n    setAiLoading(requestId);\r\n    setAiError(null);\r\n    setAiAssignedId(null);\r\n    try {\r\n      const config = await getAuthHeader();\r\n      const res = await axios.put(\r\n        `${process.env.NEXT_PUBLIC_API_URL || 'http://localhost:4000'}/requests/${requestId}/assign-ai`,\r\n        {},\r\n        config\r\n      );\r\n      setAiAssignedId(requestId);\r\n      // Optionally, refresh data here\r\n      await fetchManagerData();\r\n    } catch (err: any) {\r\n      setAiError(err?.response?.data?.error || 'Failed to assign by AI');\r\n    } finally {\r\n      setAiLoading(null);\r\n    }\r\n  };\r\n\r\n  const handleBulkAssignAI = async () => {\r\n    setBulkLoading(true);\r\n    setBulkResult(null);\r\n    try {\r\n      const config = await getAuthHeader();\r\n      const res = await axios.put(\r\n        `${process.env.NEXT_PUBLIC_API_URL || 'http://localhost:4000'}/requests/assign-ai-bulk`,\r\n        {},\r\n        config\r\n      );\r\n      setBulkResult(res.data);\r\n      await fetchManagerData();\r\n    } catch (err: any) {\r\n      setBulkResult({ assignments: [], errors: [{ error: err?.response?.data?.error || 'Bulk AI assignment failed.' }] });\r\n    } finally {\r\n      setBulkLoading(false);\r\n    }\r\n  };\r\n\r\n  if (loading) {\r\n    return <div className=\"flex items-center justify-center h-screen\"><p>Loading Dashboard...</p></div>;\r\n  }\r\n\r\n  if (!profile) {\r\n    return <div className=\"flex items-center justify-center h-screen\"><p>Could not load profile data.</p></div>;\r\n  }\r\n  \r\n  return (\r\n    <div className=\"min-h-screen bg-gray-50 p-4 sm:p-6 lg:p-8\">\r\n        {apiError && <p className=\"text-center text-red-500 mb-4\">{apiError}</p>}\r\n        {profile.role === 'manager' && (\r\n            <ManagerDashboard\r\n                profile={profile}\r\n                allRequests={managerData.allRequests}\r\n                technicians={managerData.technicians}\r\n                onAssign={handleAssignRequest}\r\n                onAssignAI={handleAssignAI}\r\n                aiLoading={aiLoading}\r\n                aiError={aiError}\r\n                aiAssignedId={aiAssignedId}\r\n                onBulkAssignAI={handleBulkAssignAI}\r\n                bulkLoading={bulkLoading}\r\n                bulkResult={bulkResult}\r\n            />\r\n        )}\r\n        {profile.role === 'technician' && (\r\n            <TechnicianDashboard profile={profile} requests={techRequests} onAccept={handleAcceptRequest} onClose={handleCloseRequest} />\r\n        )}\r\n        {profile.role === 'user' && (\r\n            <UserDashboard profile={profile} userRequests={userRequests} onSubmitRequest={handleSubmitUserRequest} />\r\n        )}\r\n        {!['manager','technician','user'].includes(profile.role) && (\r\n            <div className=\"text-center text-red-600 font-bold mt-8\">Unknown user role. Please contact support.</div>\r\n        )}\r\n    </div>\r\n  );\r\n}"],"names":[],"mappings":"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","debugId":null}}]
}